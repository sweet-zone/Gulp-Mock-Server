{"version":3,"sources":["zepto.js","index.js"],"names":["Zepto","type","obj","String","class2type","toString","call","isFunction","value","isWindow","window","isDocument","nodeType","DOCUMENT_NODE","isObject","isPlainObject","Object","getPrototypeOf","prototype","isArray","Array","likeArray","length","compact","array","filter","item","flatten","$","fn","concat","apply","dasherize","str","replace","toLowerCase","classRE","name","classCache","RegExp","maybeAddPx","cssNumber","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","children","slice","map","childNodes","node","extend","target","source","deep","key","undefined","filtered","nodes","selector","funcArg","context","arg","idx","payload","setAttribute","removeAttribute","className","klass","svg","baseVal","deserializeValue","num","isNaN","Number","test","parseJSON","e","traverseNode","fun","classList","camelize","uniq","emptyArray","column-count","columns","font-weight","line-height","opacity","z-index","zoom","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","methodAttributes","adjacencyOperators","table","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","readyRE","classSelectorRE","idSelectorRE","tagSelectorRE","zepto","tempParent","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","match","parent","temp","qsa","indexOf","chr","toUpperCase","fragment","html","properties","dom","container","$1","innerHTML","each","this","attr","Z","__proto__","isZ","object","init","ready","trim","find","args","arguments","shift","forEach","found","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","isEmptyObject","inArray","elem","i","camelCase","uuid","support","expr","elements","callback","values","push","grep","JSON","parse","split","reduce","sort","el","readyState","addEventListener","get","toArray","size","remove","every","not","add","is","excludes","has","eq","first","last","result","$this","some","closest","collection","parents","ancestors","pluck","contents","siblings","child","empty","property","show","style","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","text","textContent","val","getAttribute","removeAttr","prop","data","multiple","o","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","width","Math","round","height","computedStyle","_","removeProperty","cssText","hasClass","addClass","cls","newName","join","removeClass","toggleClass","when","names","scrollTop","hasScrollTop","scrollTo","scrollX","position","parseFloat","detach","dimension","dimensionProperty","m","documentElement","operator","operatorIndex","inside","argType","copyByClone","nextSibling","firstChild","insertBefore","src","detect","ua","os","browser","webkit","android","ipad","ipod","iphone","webos","touchpad","kindle","silk","blackberry","bb10","rimtabletos","playbook","chrome","firefox","ie","safari","webview","version","ios","tablet","phone","navigator","userAgent","__detect","zid","_zid","findHandlers","event","ns","matcher","matcherFor","handlers","handler","sel","parts","eachEvent","events","iterator","eventCapture","captureSetting","del","realEvent","hover","getDelegate","capture","id","set","related","relatedTarget","proxy","preventDefault","stopPropagation","removeEventListener","createProxy","originalEvent","ignoreProperties","eventMethods","predicate","returnTrue","returnFalse","fix","defaultPrevented","prevent","specialEvents","mouseenter","mouseleave","click","mousedown","mouseup","mousemove","proxyFn","TypeError","bind","unbind","one","stopImmediatePropagation","delegate","evt","currentTarget","liveFired","undelegate","live","die","on","off","trigger","Event","dispatchEvent","triggerHandler","isImmediatePropagationStopped","createEvent","bubbles","initEvent","isDefaultPrevented","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","ajaxComplete","ajaxError","error","complete","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","options","processData","param","traditional","parseArguments","dataType","hasData","serialize","params","scope","jsonpID","rscript","blankRE","ajaxJSONP","ajax","abortTimeout","_callbackName","jsonpCallback","callbackName","script","cleanup","clearTimeout","abort","onerror","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","cache","$2","location","host","Date","now","hasPlaceholder","jsonp","baseHeaders","protocol","overrideMimeType","contentType","headers","onreadystatechange","getResponseHeader","responseText","eval","responseXML","statusText","async","open","setRequestHeader","send","post","getJSON","load","response","escape","encodeURIComponent","k","v","serializeArray","disabled","checked","elm","submit","normalizeEvent","eventPrefix","transform","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationName","animationDuration","animationTiming","animationDelay","prefix","vendors","Webkit","Moz","O","ms","testEl","supportedTransforms","cssReset","vendor","fx","speeds","_default","fast","slow","cssPrefix","transitionEnd","animationEnd","animate","duration","ease","delay","easing","anim","cssProperties","wrappedCallback","cssValues","transforms","that","endEvent","clientLeft","swipeDirection","x1","x2","y1","y2","abs","longTap","longTapTimeout","touch","cancelLongTap","cancelAll","touchTimeout","tapTimeout","swipeTimeout","isPrimaryTouch","pointerType","MSPOINTER_TYPE_TOUCH","isPrimary","gesture","longTapDelay","delta","firstTouch","deltaX","deltaY","MSGesture","swipeDirectionFromVelocity","velocityX","velocityY","touches","pageX","pageY","isDoubleTap","addPointer","pointerId","cancelTouch","alert"],"mappings":"AAGA,GAAAA,OAAA,WA6CA,QAAAC,GAAAC,GACA,MAAA,OAAAA,EAAAC,OAAAD,GACAE,EAAAC,EAAAC,KAAAJ,KAAA,SAGA,QAAAK,GAAAC,GAAA,MAAA,YAAAP,EAAAO,GACA,QAAAC,GAAAP,GAAA,MAAA,OAAAA,GAAAA,GAAAA,EAAAQ,OACA,QAAAC,GAAAT,GAAA,MAAA,OAAAA,GAAAA,EAAAU,UAAAV,EAAAW,cACA,QAAAC,GAAAZ,GAAA,MAAA,UAAAD,EAAAC,GACA,QAAAa,GAAAb,GACA,MAAAY,GAAAZ,KAAAO,EAAAP,IAAAc,OAAAC,eAAAf,IAAAc,OAAAE,UAEA,QAAAC,GAAAX,GAAA,MAAAA,aAAAY,OACA,QAAAC,GAAAnB,GAAA,MAAA,gBAAAA,GAAAoB,OAEA,QAAAC,GAAAC,GAAA,MAAAC,GAAAnB,KAAAkB,EAAA,SAAAE,GAAA,MAAA,OAAAA,IACA,QAAAC,GAAAH,GAAA,MAAAA,GAAAF,OAAA,EAAAM,EAAAC,GAAAC,OAAAC,SAAAP,GAAAA,EAEA,QAAAQ,GAAAC,GACA,MAAAA,GAAAC,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAC,cAIA,QAAAC,GAAAC,GACA,MAAAA,KAAAC,GACAA,EAAAD,GAAAC,EAAAD,GAAA,GAAAE,QAAA,UAAAF,EAAA,WAGA,QAAAG,GAAAH,EAAA7B,GACA,MAAA,gBAAAA,IAAAiC,EAAAT,EAAAK,IAAA7B,EAAAA,EAAA,KAGA,QAAAkC,GAAAC,GACA,GAAAC,GAAAC,CASA,OARAC,GAAAH,KACAC,EAAAG,EAAAC,cAAAL,GACAI,EAAAE,KAAAC,YAAAN,GACAC,EAAAM,iBAAAP,EAAA,IAAAQ,iBAAA,WACAR,EAAAS,WAAAC,YAAAV,GACA,QAAAC,IAAAA,EAAA,SACAC,EAAAH,GAAAE,GAEAC,EAAAH,GAGA,QAAAY,GAAAX,GACA,MAAA,YAAAA,GACAY,EAAAlD,KAAAsC,EAAAW,UACA3B,EAAA6B,IAAAb,EAAAc,WAAA,SAAAC,GAAA,MAAA,IAAAA,EAAA/C,SAAA+C,EAAA,SA6FA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,IAAAC,IAAAF,GACAC,IAAAhD,EAAA+C,EAAAE,KAAA7C,EAAA2C,EAAAE,MACAjD,EAAA+C,EAAAE,MAAAjD,EAAA8C,EAAAG,MACAH,EAAAG,OACA7C,EAAA2C,EAAAE,MAAA7C,EAAA0C,EAAAG,MACAH,EAAAG,OACAJ,EAAAC,EAAAG,GAAAF,EAAAE,GAAAD,IAEAD,EAAAE,KAAAC,IAAAJ,EAAAG,GAAAF,EAAAE,IA8BA,QAAAE,GAAAC,EAAAC,GACA,MAAA,OAAAA,EAAAxC,EAAAuC,GAAAvC,EAAAuC,GAAA1C,OAAA2C,GAOA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAlE,GAAAgE,GAAAA,EAAAjE,KAAAgE,EAAAE,EAAAC,GAAAF,EAGA,QAAAG,GAAAf,EAAAtB,EAAA7B,GACA,MAAAA,EAAAmD,EAAAgB,gBAAAtC,GAAAsB,EAAAe,aAAArC,EAAA7B,GAIA,QAAAoE,GAAAjB,EAAAnD,GACA,GAAAqE,GAAAlB,EAAAiB,UACAE,EAAAD,GAAAA,EAAAE,UAAAd,CAEA,OAAAzD,KAAAyD,EAAAa,EAAAD,EAAAE,QAAAF,OACAC,EAAAD,EAAAE,QAAAvE,EAAAmD,EAAAiB,UAAApE,GAUA,QAAAwE,GAAAxE,GACA,GAAAyE,EACA,KACA,MAAAzE,GACA,QAAAA,IACA,SAAAA,GAAA,EACA,QAAAA,EAAA,KACA0E,MAAAD,EAAAE,OAAA3E,IACA,UAAA4E,KAAA5E,GAAAoB,EAAAyD,UAAA7E,GACAA,EAFAyE,GAGAzE,EACA,MAAA8E,GACA,MAAA9E,IA4dA,QAAA+E,GAAA5B,EAAA6B,GACAA,EAAA7B,EACA,KAAA,GAAAK,KAAAL,GAAAD,WAAA6B,EAAA5B,EAAAD,WAAAM,GAAAwB,GA9uBA,GAAAvB,GAAAD,EAAApC,EAAA6D,EA4BAC,EAAAC,EA5BAC,KAAApC,EAAAoC,EAAApC,MAAA/B,EAAAmE,EAAAnE,OACAsB,EAAArC,OAAAqC,SACAD,KAAAR,KACAG,GAAAoD,eAAA,EAAAC,QAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,KAAA,GACAC,EAAA,qBACAC,EAAA,6BACAC,EAAA,0EACAC,EAAA,mBAGAC,GAAA,MAAA,MAAA,OAAA,OAAA,OAAA,QAAA,SAAA,UAEAC,GAAA,QAAA,UAAA,SAAA,UACAC,EAAA3D,EAAAC,cAAA,SACA2D,EAAA5D,EAAAC,cAAA,MACA4D,GACAC,GAAA9D,EAAAC,cAAA,SACA8D,MAAAJ,EAAAK,MAAAL,EAAAM,MAAAN,EACAO,GAAAN,EAAAO,GAAAP,EACAQ,IAAApE,EAAAC,cAAA,QAEAoE,EAAA,8BACAC,EAAA,eACAC,EAAA,cACAC,EAAA,WACAnH,KACAC,EAAAD,EAAAC,SACAmH,KAEAC,EAAA1E,EAAAC,cAAA,MA0wBA,OAxwBAwE,GAAAE,QAAA,SAAA9E,EAAAwB,GACA,IAAAxB,GAAA,IAAAA,EAAAhC,SAAA,OAAA,CACA,IAAA+G,GAAA/E,EAAAgF,uBAAAhF,EAAAiF,oBACAjF,EAAAkF,kBAAAlF,EAAA+E,eACA,IAAAA,EAAA,MAAAA,GAAArH,KAAAsC,EAAAwB,EAEA,IAAA2D,GAAAC,EAAApF,EAAAS,WAAA4E,GAAAD,CAIA,OAHAC,KAAAD,EAAAP,GAAAvE,YAAAN,GACAmF,GAAAP,EAAAU,IAAAF,EAAA5D,GAAA+D,QAAAvF,GACAqF,GAAAR,EAAAnE,YAAAV,GACAmF,GAoBArC,EAAA,SAAAzD,GAAA,MAAAA,GAAAC,QAAA,UAAA,SAAA6F,EAAAK,GAAA,MAAAA,GAAAA,EAAAC,cAAA,MAQA1C,EAAA,SAAAnE,GAAA,MAAAC,GAAAnB,KAAAkB,EAAA,SAAAE,EAAA8C,GAAA,MAAAhD,GAAA2G,QAAAzG,IAAA8C,KAmCAgD,EAAAc,SAAA,SAAAC,EAAAlG,EAAAmG,GACA,GAAAC,GAAAtE,EAAAuE,CAyBA,OAtBArC,GAAAjB,KAAAmD,KAAAE,EAAA7G,EAAAmB,EAAAC,cAAAT,OAAAoG,MAEAF,IACAF,EAAArG,UAAAqG,EAAAA,EAAArG,QAAAoE,EAAA,cACAjE,IAAA4B,IAAA5B,EAAA+D,EAAAhB,KAAAmD,IAAAhG,OAAAoG,IACAtG,IAAAuE,KAAAvE,EAAA,KAEAqG,EAAA9B,EAAAvE,GACAqG,EAAAE,UAAA,GAAAL,EACAE,EAAA7G,EAAAiH,KAAArF,EAAAlD,KAAAoI,EAAAhF,YAAA,WACAgF,EAAApF,YAAAwF,SAIA/H,EAAAyH,KACArE,EAAAvC,EAAA6G,GACA7G,EAAAiH,KAAAL,EAAA,SAAAxE,EAAAxD,GACAgG,EAAA2B,QAAAnE,GAAA,GAAAG,EAAAH,GAAAxD,GACA2D,EAAA4E,KAAA/E,EAAAxD,MAIAiI,GAOAjB,EAAAwB,EAAA,SAAAP,EAAArE,GAIA,MAHAqE,GAAAA,MACAA,EAAAQ,UAAArH,EAAAC,GACA4G,EAAArE,SAAAA,GAAA,GACAqE,GAKAjB,EAAA0B,IAAA,SAAAC,GACA,MAAAA,aAAA3B,GAAAwB,GAOAxB,EAAA4B,KAAA,SAAAhF,EAAAE,GAEA,GAAAF,EAEA,CAAA,GAAA7D,EAAA6D,GAAA,MAAAxC,GAAAmB,GAAAsG,MAAAjF,EAEA,IAAAoD,EAAA0B,IAAA9E,GAAA,MAAAA,EAEA,IAAAqE,EAEA,IAAAtH,EAAAiD,GAAAqE,EAAAlH,EAAA6C,OAEA,IAAAtD,EAAAsD,GACAqE,GAAArE,GAAAA,EAAA,SAEA,IAAAgC,EAAAhB,KAAAhB,GACAqE,EAAAjB,EAAAc,SAAAlE,EAAAkF,OAAA/G,OAAAoG,GAAArE,GAAAF,EAAA,SAGA,CAAA,GAAAE,IAAAL,EAAA,MAAArC,GAAA0C,GAAAiF,KAAAnF,EAEAqE,GAAAjB,EAAAU,IAAAnF,EAAAqB,GAEA,MAAAoD,GAAAwB,EAAAP,EAAArE,GArBA,MAAAoD,GAAAwB,KA6BApH,EAAA,SAAAwC,EAAAE,GACA,MAAAkD,GAAA4B,KAAAhF,EAAAE,IAiBA1C,EAAAgC,OAAA,SAAAC,GACA,GAAAE,GAAAyF,EAAAhG,EAAAlD,KAAAmJ,UAAA,EAMA,OALA,iBAAA5F,KACAE,EAAAF,EACAA,EAAA2F,EAAAE,SAEAF,EAAAG,QAAA,SAAApF,GAAAX,EAAAC,EAAAU,EAAAR,KACAF,GAMA2D,EAAAU,IAAA,SAAAtF,EAAAwB,GACA,GAAAwF,EACA,OAAAjJ,GAAAiC,IAAA0E,EAAAlC,KAAAhB,IACAwF,EAAAhH,EAAAiH,eAAAtH,OAAAoG,MAAAiB,MACA,IAAAhH,EAAAhC,UAAA,IAAAgC,EAAAhC,YACA4C,EAAAlD,KACA+G,EAAAjC,KAAAhB,GAAAxB,EAAAkH,uBAAAvH,OAAAoG,IACApB,EAAAnC,KAAAhB,GAAAxB,EAAAmH,qBAAA3F,GACAxB,EAAAoH,iBAAA5F,KAQAxC,EAAAqI,SAAA,SAAAjC,EAAArE,GACA,MAAAqE,KAAArE,GAAAqE,EAAAiC,SAAAtG,IA2CA/B,EAAA3B,KAAAA,EACA2B,EAAArB,WAAAA,EACAqB,EAAAnB,SAAAA,EACAmB,EAAAT,QAAAA,EACAS,EAAAb,cAAAA,EAEAa,EAAAsI,cAAA,SAAAhK,GACA,GAAAmC,EACA,KAAAA,IAAAnC,GAAA,OAAA,CACA,QAAA,GAGA0B,EAAAuI,QAAA,SAAAC,EAAA5I,EAAA6I,GACA,MAAAzE,GAAAuC,QAAA7H,KAAAkB,EAAA4I,EAAAC,IAGAzI,EAAA0I,UAAA5E,EACA9D,EAAA0H,KAAA,SAAArH,GACA,MAAA,OAAAA,EAAA,GAAA9B,OAAAe,UAAAoI,KAAAhJ,KAAA2B,IAIAL,EAAA2I,KAAA,EACA3I,EAAA4I,WACA5I,EAAA6I,QAEA7I,EAAA6B,IAAA,SAAAiH,EAAAC,GACA,GAAAnK,GAAA6J,EAAArG,EAAA4G,IACA,IAAAvJ,EAAAqJ,GACA,IAAAL,EAAA,EAAAA,EAAAK,EAAApJ,OAAA+I,IACA7J,EAAAmK,EAAAD,EAAAL,GAAAA,GACA,MAAA7J,GAAAoK,EAAAC,KAAArK,OAGA,KAAAwD,IAAA0G,GACAlK,EAAAmK,EAAAD,EAAA1G,GAAAA,GACA,MAAAxD,GAAAoK,EAAAC,KAAArK,EAEA,OAAAmB,GAAAiJ,IAGAhJ,EAAAiH,KAAA,SAAA6B,EAAAC,GACA,GAAAN,GAAArG,CACA,IAAA3C,EAAAqJ,IACA,IAAAL,EAAA,EAAAA,EAAAK,EAAApJ,OAAA+I,IACA,GAAAM,EAAArK,KAAAoK,EAAAL,GAAAA,EAAAK,EAAAL,OAAA,EAAA,MAAAK,OAEA,KAAA1G,IAAA0G,GACA,GAAAC,EAAArK,KAAAoK,EAAA1G,GAAAA,EAAA0G,EAAA1G,OAAA,EAAA,MAAA0G,EAGA,OAAAA,IAGA9I,EAAAkJ,KAAA,SAAAJ,EAAAC,GACA,MAAAlJ,GAAAnB,KAAAoK,EAAAC,IAGAjK,OAAAqK,OAAAnJ,EAAAyD,UAAA0F,KAAAC,OAGApJ,EAAAiH,KAAA,gEAAAoC,MAAA,KAAA,SAAAZ,EAAAhI,GACAjC,EAAA,WAAAiC,EAAA,KAAAA,EAAAF,gBAKAP,EAAAC,IAGA8H,QAAA/D,EAAA+D,QACAuB,OAAAtF,EAAAsF,OACAL,KAAAjF,EAAAiF,KACAM,KAAAvF,EAAAuF,KACAhD,QAAAvC,EAAAuC,QACArG,OAAA8D,EAAA9D,OAIA2B,IAAA,SAAA5B,GACA,MAAAD,GAAAA,EAAA6B,IAAAqF,KAAA,SAAAsC,EAAAf,GAAA,MAAAxI,GAAAvB,KAAA8K,EAAAf,EAAAe,OAEA5H,MAAA,WACA,MAAA5B,GAAA4B,EAAAzB,MAAA+G,KAAAW,aAGAJ,MAAA,SAAAsB,GAGA,MAFAvD,GAAAhC,KAAArC,EAAAsI,YAAAV,EAAA/I,GACAmB,EAAAuI,iBAAA,mBAAA,WAAAX,EAAA/I,KAAA,GACAkH,MAEAyC,IAAA,SAAA/G,GACA,MAAAA,KAAAP,EAAAT,EAAAlD,KAAAwI,MAAAA,KAAAtE,GAAA,EAAAA,EAAAA,EAAAsE,KAAAxH,SAEAkK,QAAA,WAAA,MAAA1C,MAAAyC,OACAE,KAAA,WACA,MAAA3C,MAAAxH,QAEAoK,OAAA,WACA,MAAA5C,MAAAD,KAAA,WACA,MAAAC,KAAAzF,YACAyF,KAAAzF,WAAAC,YAAAwF,SAGAD,KAAA,SAAA8B,GAIA,MAHA/E,GAAA+F,MAAArL,KAAAwI,KAAA,SAAAsC,EAAA5G,GACA,MAAAmG,GAAArK,KAAA8K,EAAA5G,EAAA4G,MAAA,IAEAtC,MAEArH,OAAA,SAAA2C,GACA,MAAA7D,GAAA6D,GAAA0E,KAAA8C,IAAA9C,KAAA8C,IAAAxH,IACAxC,EAAAH,EAAAnB,KAAAwI,KAAA,SAAAlG,GACA,MAAA4E,GAAAE,QAAA9E,EAAAwB,OAGAyH,IAAA,SAAAzH,EAAAE,GACA,MAAA1C,GAAA+D,EAAAmD,KAAAhH,OAAAF,EAAAwC,EAAAE,OAEAwH,GAAA,SAAA1H,GACA,MAAA0E,MAAAxH,OAAA,GAAAkG,EAAAE,QAAAoB,KAAA,GAAA1E,IAEAwH,IAAA,SAAAxH,GACA,GAAAD,KACA,IAAA5D,EAAA6D,IAAAA,EAAA9D,OAAA2D,EACA6E,KAAAD,KAAA,SAAArE,GACAJ,EAAA9D,KAAAwI,KAAAtE,IAAAL,EAAA0G,KAAA/B,YAEA,CACA,GAAAiD,GAAA,gBAAA3H,GAAA0E,KAAArH,OAAA2C,GACA/C,EAAA+C,IAAA7D,EAAA6D,EAAA1C,MAAA8B,EAAAlD,KAAA8D,GAAAxC,EAAAwC,EACA0E,MAAAa,QAAA,SAAAyB,GACAW,EAAA5D,QAAAiD,GAAA,GAAAjH,EAAA0G,KAAAO,KAGA,MAAAxJ,GAAAuC,IAEA6H,IAAA,SAAA5H,GACA,MAAA0E,MAAArH,OAAA,WACA,MAAAX,GAAAsD,GACAxC,EAAAqI,SAAAnB,KAAA1E,GACAxC,EAAAkH,MAAAS,KAAAnF,GAAAqH,UAGAQ,GAAA,SAAAzH,GACA,MAAA,KAAAA,EAAAsE,KAAAtF,MAAAgB,GAAAsE,KAAAtF,MAAAgB,GAAAA,EAAA,IAEA0H,MAAA,WACA,GAAAd,GAAAtC,KAAA,EACA,OAAAsC,KAAAtK,EAAAsK,GAAAA,EAAAxJ,EAAAwJ,IAEAe,KAAA,WACA,GAAAf,GAAAtC,KAAAA,KAAAxH,OAAA,EACA,OAAA8J,KAAAtK,EAAAsK,GAAAA,EAAAxJ,EAAAwJ,IAEA7B,KAAA,SAAAnF,GACA,GAAAgI,GAAAC,EAAAvD,IAUA,OARAsD,GADA,gBAAAhI,GACAxC,EAAAwC,GAAA3C,OAAA,WACA,GAAAkC,GAAAmF,IACA,OAAAlD,GAAA0G,KAAAhM,KAAA+L,EAAA,SAAArE,GACA,MAAApG,GAAAqI,SAAAjC,EAAArE,OAGA,GAAAmF,KAAAxH,OAAAM,EAAA4F,EAAAU,IAAAY,KAAA,GAAA1E,IACA0E,KAAArF,IAAA,WAAA,MAAA+D,GAAAU,IAAAY,KAAA1E,MAGAmI,QAAA,SAAAnI,EAAAE,GACA,GAAAX,GAAAmF,KAAA,GAAA0D,GAAA,CAEA,KADA,gBAAApI,KAAAoI,EAAA5K,EAAAwC,IACAT,KAAA6I,EAAAA,EAAArE,QAAAxE,IAAA,EAAA6D,EAAAE,QAAA/D,EAAAS,KACAT,EAAAA,IAAAW,IAAA3D,EAAAgD,IAAAA,EAAAN,UACA,OAAAzB,GAAA+B,IAEA8I,QAAA,SAAArI,GAEA,IADA,GAAAsI,MAAAvI,EAAA2E,KACA3E,EAAA7C,OAAA,GACA6C,EAAAvC,EAAA6B,IAAAU,EAAA,SAAAR,GACA,OAAAA,EAAAA,EAAAN,cAAA1C,EAAAgD,IAAA+I,EAAAvE,QAAAxE,GAAA,GACA+I,EAAA7B,KAAAlH,GACAA,GAFA,QAKA,OAAAO,GAAAwI,EAAAtI,IAEA4D,OAAA,SAAA5D,GACA,MAAAF,GAAAyB,EAAAmD,KAAA6D,MAAA,eAAAvI,IAEAb,SAAA,SAAAa,GACA,MAAAF,GAAA4E,KAAArF,IAAA,WAAA,MAAAF,GAAAuF,QAAA1E,IAEAwI,SAAA,WACA,MAAA9D,MAAArF,IAAA,WAAA,MAAAD,GAAAlD,KAAAwI,KAAApF,eAEAmJ,SAAA,SAAAzI,GACA,MAAAF,GAAA4E,KAAArF,IAAA,SAAA4G,EAAAe,GACA,MAAA3J,GAAAnB,KAAAiD,EAAA6H,EAAA/H,YAAA,SAAAyJ,GAAA,MAAAA,KAAA1B,MACAhH,IAEA2I,MAAA,WACA,MAAAjE,MAAAD,KAAA,WAAAC,KAAAF,UAAA,MAGA+D,MAAA,SAAAK,GACA,MAAApL,GAAA6B,IAAAqF,KAAA,SAAAsC,GAAA,MAAAA,GAAA4B,MAEAC,KAAA,WACA,MAAAnE,MAAAD,KAAA,WACA,QAAAC,KAAAoE,MAAArK,UAAAiG,KAAAoE,MAAArK,QAAA,IACA,QAAAM,iBAAA2F,KAAA,IAAA1F,iBAAA,aACA0F,KAAAoE,MAAArK,QAAAH,EAAAoG,KAAAnG,cAGAwK,YAAA,SAAAC,GACA,MAAAtE,MAAAuE,OAAAD,GAAA1B,UAEA4B,KAAA,SAAAC,GACA,GAAAC,GAAAjN,EAAAgN,EACA,IAAAzE,KAAA,KAAA0E,EACA,GAAA/E,GAAA7G,EAAA2L,GAAAhC,IAAA,GACAkC,EAAAhF,EAAApF,YAAAyF,KAAAxH,OAAA,CAEA,OAAAwH,MAAAD,KAAA,SAAA6E,GACA9L,EAAAkH,MAAA6E,QACAH,EAAAD,EAAAjN,KAAAwI,KAAA4E,GACAD,EAAAhF,EAAAmF,WAAA,GAAAnF,MAIAkF,QAAA,SAAAJ,GACA,GAAAzE,KAAA,GAAA,CACAlH,EAAAkH,KAAA,IAAAuE,OAAAE,EAAA3L,EAAA2L,GAGA,KAFA,GAAAhK,IAEAA,EAAAgK,EAAAhK,YAAAjC,QAAAiM,EAAAhK,EAAA2I,OACAtK,GAAA2L,GAAAM,OAAA/E,MAEA,MAAAA,OAEAgF,UAAA,SAAAP,GACA,GAAAC,GAAAjN,EAAAgN,EACA,OAAAzE,MAAAD,KAAA,SAAA6E,GACA,GAAAK,GAAAnM,EAAAkH,MAAA8D,EAAAmB,EAAAnB,WACAnE,EAAA+E,EAAAD,EAAAjN,KAAAwI,KAAA4E,GAAAH,CACAX,GAAAtL,OAAAsL,EAAAe,QAAAlF,GAAAsF,EAAAF,OAAApF,MAGAuF,OAAA,WAIA,MAHAlF,MAAAd,SAAAa,KAAA,WACAjH,EAAAkH,MAAAqE,YAAAvL,EAAAkH,MAAAvF,cAEAuF,MAEA2E,MAAA,WACA,MAAA3E,MAAArF,IAAA,WAAA,MAAAqF,MAAA8E,WAAA,MAEAK,KAAA,WACA,MAAAnF,MAAAoF,IAAA,UAAA,SAEAC,OAAA,SAAAC,GACA,MAAAtF,MAAAD,KAAA,WACA,GAAAuC,GAAAxJ,EAAAkH,OACAsF,IAAAnK,EAAA,QAAAmH,EAAA8C,IAAA,WAAAE,GAAAhD,EAAA6B,OAAA7B,EAAA6C,UAGAI,KAAA,SAAAjK,GAAA,MAAAxC,GAAAkH,KAAA6D,MAAA,2BAAAlL,OAAA2C,GAAA,MACAkK,KAAA,SAAAlK,GAAA,MAAAxC,GAAAkH,KAAA6D,MAAA,uBAAAlL,OAAA2C,GAAA,MACAmE,KAAA,SAAAA,GACA,MAAA,KAAAkB,UAAAnI,OACAwH,KAAAxH,OAAA,EAAAwH,KAAA,GAAAF,UAAA,KACAE,KAAAD,KAAA,SAAArE,GACA,GAAA+J,GAAAzF,KAAAF,SACAhH,GAAAkH,MAAAiE,QAAAc,OAAAxJ,EAAAyE,KAAAP,EAAA/D,EAAA+J,OAGAC,KAAA,SAAAA,GACA,MAAA,KAAA/E,UAAAnI,OACAwH,KAAAxH,OAAA,EAAAwH,KAAA,GAAA2F,YAAA,KACA3F,KAAAD,KAAA,WAAAC,KAAA2F,YAAAD,IAAAvK,EAAA,GAAA,GAAAuK,KAEAzF,KAAA,SAAA1G,EAAA7B,GACA,GAAA4L,EACA,OAAA,gBAAA/J,IAAA7B,IAAAyD,EACA,GAAA6E,KAAAxH,QAAA,IAAAwH,KAAA,GAAAlI,SAAAqD,EACA,SAAA5B,GAAA,SAAAyG,KAAA,GAAAnG,SAAAmG,KAAA4F,QACAtC,EAAAtD,KAAA,GAAA6F,aAAAtM,KAAAA,IAAAyG,MAAA,GAAAA,KAAA,GAAAzG,GAAA+J,EAEAtD,KAAAD,KAAA,SAAArE,GACA,GAAA,IAAAsE,KAAAlI,SACA,GAAAE,EAAAuB,GAAA,IAAA2B,IAAA3B,GAAAqC,EAAAoE,KAAA9E,EAAA3B,EAAA2B,QACAU,GAAAoE,KAAAzG,EAAAgC,EAAAyE,KAAAtI,EAAAgE,EAAAsE,KAAA6F,aAAAtM,QAGAuM,WAAA,SAAAvM,GACA,MAAAyG,MAAAD,KAAA,WAAA,IAAAC,KAAAlI,UAAA8D,EAAAoE,KAAAzG,MAEAwM,KAAA,SAAAxM,EAAA7B,GACA,MAAAA,KAAAyD,EACA6E,KAAA,IAAAA,KAAA,GAAAzG,GACAyG,KAAAD,KAAA,SAAArE,GACAsE,KAAAzG,GAAAgC,EAAAyE,KAAAtI,EAAAgE,EAAAsE,KAAAzG,OAGAyM,KAAA,SAAAzM,EAAA7B,GACA,GAAAsO,GAAAhG,KAAAC,KAAA,QAAA/G,EAAAK,GAAA7B,EACA,OAAA,QAAAsO,EAAA9J,EAAA8J,GAAA7K,GAEAyK,IAAA,SAAAlO,GACA,MAAA,KAAAiJ,UAAAnI,OACAwH,KAAA,KAAAA,KAAA,GAAAiG,SACAnN,EAAAkH,KAAA,IAAAS,KAAA,UAAA9H,OAAA,SAAAuN,GAAA,MAAAlG,MAAAmG,WAAAtC,MAAA,SACA7D,KAAA,GAAAtI,OAEAsI,KAAAD,KAAA,SAAArE,GACAsE,KAAAtI,MAAA6D,EAAAyE,KAAAtI,EAAAgE,EAAAsE,KAAAtI,UAGA0O,OAAA,SAAAC,GACA,GAAAA,EAAA,MAAArG,MAAAD,KAAA,SAAA6E,GACA,GAAArB,GAAAzK,EAAAkH,MACAsG,EAAA/K,EAAAyE,KAAAqG,EAAAzB,EAAArB,EAAA6C,UACAG,EAAAhD,EAAAiD,eAAAJ,SACAK,GACAC,IAAAJ,EAAAI,IAAAH,EAAAG,IACAC,KAAAL,EAAAK,KAAAJ,EAAAI,KAGA,WAAApD,EAAA6B,IAAA,cAAAqB,EAAA,SAAA,YACAlD,EAAA6B,IAAAqB,IAEA,IAAA,GAAAzG,KAAAxH,OAAA,MAAA,KACA,IAAApB,GAAA4I,KAAA,GAAA4G,uBACA,QACAD,KAAAvP,EAAAuP,KAAA/O,OAAAiP,YACAH,IAAAtP,EAAAsP,IAAA9O,OAAAkP,YACAC,MAAAC,KAAAC,MAAA7P,EAAA2P,OACAG,OAAAF,KAAAC,MAAA7P,EAAA8P,UAGA9B,IAAA,SAAAlB,EAAAxM,GACA,GAAAiJ,UAAAnI,OAAA,EAAA,CACA,GAAAsB,GAAAkG,KAAA,GAAAmH,EAAA9M,iBAAAP,EAAA,GACA,KAAAA,EAAA,MACA,IAAA,gBAAAoK,GACA,MAAApK,GAAAsK,MAAAxH,EAAAsH,KAAAiD,EAAA7M,iBAAA4J,EACA,IAAA7L,EAAA6L,GAAA,CACA,GAAAuC,KAIA,OAHA3N,GAAAiH,KAAA1H,EAAA6L,GAAAA,GAAAA,GAAA,SAAAkD,EAAArB,GACAU,EAAAV,GAAAjM,EAAAsK,MAAAxH,EAAAmJ,KAAAoB,EAAA7M,iBAAAyL,KAEAU,GAIA,GAAArB,GAAA,EACA,IAAA,UAAAjO,EAAA+M,GACAxM,GAAA,IAAAA,EAGA0N,EAAAlM,EAAAgL,GAAA,IAAAxK,EAAAwK,EAAAxM,GAFAsI,KAAAD,KAAA,WAAAC,KAAAoE,MAAAiD,eAAAnO,EAAAgL,UAIA,KAAAhJ,IAAAgJ,GACAA,EAAAhJ,IAAA,IAAAgJ,EAAAhJ,GAGAkK,GAAAlM,EAAAgC,GAAA,IAAAxB,EAAAwB,EAAAgJ,EAAAhJ,IAAA,IAFA8E,KAAAD,KAAA,WAAAC,KAAAoE,MAAAiD,eAAAnO,EAAAgC,KAKA,OAAA8E,MAAAD,KAAA,WAAAC,KAAAoE,MAAAkD,SAAA,IAAAlC,KAEAR,MAAA,SAAA9K,GACA,MAAAA,GAAAkG,KAAAX,QAAAvG,EAAAgB,GAAA,IAAAkG,KAAAd,SAAAzE,WAAA4E,QAAAW,KAAA,KAEAuH,SAAA,SAAAhO,GACA,MAAAuD,GAAA0G,KAAAhM,KAAAwI,KAAA,SAAAsC,GACA,MAAAtC,MAAA1D,KAAAR,EAAAwG,KACAhJ,EAAAC,KAEAiO,SAAA,SAAAjO,GACA,MAAAyG,MAAAD,KAAA,SAAArE,GACAiB,IACA,IAAA8K,GAAA3L,EAAAkE,MAAA0H,EAAAnM,EAAAyE,KAAAzG,EAAAmC,EAAA+L,EACAC,GAAAvF,MAAA,QAAAtB,QAAA,SAAA9E,GACAjD,EAAAkH,MAAAuH,SAAAxL,IAAAY,EAAAoF,KAAAhG,IACAiE,MACArD,EAAAnE,QAAAsD,EAAAkE,KAAAyH,GAAAA,EAAA,IAAA,IAAA9K,EAAAgL,KAAA,SAGAC,YAAA,SAAArO,GACA,MAAAyG,MAAAD,KAAA,SAAArE,GACA,MAAAnC,KAAA4B,EAAAW,EAAAkE,KAAA,KACArD,EAAAb,EAAAkE,MACAzE,EAAAyE,KAAAzG,EAAAmC,EAAAiB,GAAAwF,MAAA,QAAAtB,QAAA,SAAA9E,GACAY,EAAAA,EAAAvD,QAAAE,EAAAyC,GAAA,WAEAD,GAAAkE,KAAArD,EAAA6D,YAGAqH,YAAA,SAAAtO,EAAAuO,GACA,MAAA9H,MAAAD,KAAA,SAAArE,GACA,GAAA6H,GAAAzK,EAAAkH,MAAA+H,EAAAxM,EAAAyE,KAAAzG,EAAAmC,EAAAI,EAAAkE,MACA+H,GAAA5F,MAAA,QAAAtB,QAAA,SAAA9E,IACA+L,IAAA3M,GAAAoI,EAAAgE,SAAAxL,GAAA+L,GACAvE,EAAAiE,SAAAzL,GAAAwH,EAAAqE,YAAA7L,QAIAiM,UAAA,SAAAtQ,GACA,GAAAsI,KAAAxH,OAAA,CACA,GAAAyP,GAAA,aAAAjI,MAAA,EACA,OAAAtI,KAAAyD,EAAA8M,EAAAjI,KAAA,GAAAgI,UAAAhI,KAAA,GAAA8G,YACA9G,KAAAD,KAAAkI,EACA,WAAAjI,KAAAgI,UAAAtQ,GACA,WAAAsI,KAAAkI,SAAAlI,KAAAmI,QAAAzQ,OAEA0Q,SAAA,WACA,GAAApI,KAAAxH,OAAA,CAEA,GAAA8I,GAAAtB,KAAA,GAEAwG,EAAAxG,KAAAwG,eAEAJ,EAAApG,KAAAoG,SACAG,EAAA9I,EAAAnB,KAAAkK,EAAA,GAAA3M,WAAA6M,IAAA,EAAAC,KAAA,GAAAH,EAAAJ,QAaA,OARAA,GAAAM,KAAA2B,WAAAvP,EAAAwI,GAAA8D,IAAA,gBAAA,EACAgB,EAAAO,MAAA0B,WAAAvP,EAAAwI,GAAA8D,IAAA,iBAAA,EAGAmB,EAAAG,KAAA2B,WAAAvP,EAAA0N,EAAA,IAAApB,IAAA,sBAAA,EACAmB,EAAAI,MAAA0B,WAAAvP,EAAA0N,EAAA,IAAApB,IAAA,uBAAA,GAIAsB,IAAAN,EAAAM,IAAAH,EAAAG,IACAC,KAAAP,EAAAO,KAAAJ,EAAAI,QAGAH,aAAA,WACA,MAAAxG,MAAArF,IAAA,WAEA,IADA,GAAAuE,GAAAc,KAAAwG,cAAAvM,EAAAE,KACA+E,IAAAzB,EAAAnB,KAAA4C,EAAArF,WAAA,UAAAf,EAAAoG,GAAAkG,IAAA,aACAlG,EAAAA,EAAAsH,YACA,OAAAtH,OAMApG,EAAAC,GAAAuP,OAAAxP,EAAAC,GAAA6J,QAGA,QAAA,UAAA/B,QAAA,SAAA0H,GACA,GAAAC,GACAD,EAAAnP,QAAA,IAAA,SAAAqP,GAAA,MAAAA,GAAA,GAAAlJ,eAEAzG,GAAAC,GAAAwP,GAAA,SAAA7Q,GACA,GAAA0O,GAAA9D,EAAAtC,KAAA,EACA,OAAAtI,KAAAyD,EAAAxD,EAAA2K,GAAAA,EAAA,QAAAkG,GACA3Q,EAAAyK,GAAAA,EAAAoG,gBAAA,SAAAF,IACApC,EAAApG,KAAAoG,WAAAA,EAAAmC,GACAvI,KAAAD,KAAA,SAAArE,GACA4G,EAAAxJ,EAAAkH,MACAsC,EAAA8C,IAAAmD,EAAAhN,EAAAyE,KAAAtI,EAAAgE,EAAA4G,EAAAiG,YAYA5K,EAAAkD,QAAA,SAAA8H,EAAAC,GACA,GAAAC,GAAAD,EAAA,CAEA9P,GAAAC,GAAA4P,GAAA,WAEA,GAAAG,GAKA5J,EALA7D,EAAAvC,EAAA6B,IAAAgG,UAAA,SAAAlF,GAEA,MADAqN,GAAA3R,EAAAsE,GACA,UAAAqN,GAAA,SAAAA,GAAA,MAAArN,EACAA,EAAAiD,EAAAc,SAAA/D,KAEAsN,EAAA/I,KAAAxH,OAAA,CACA,OAAA6C,GAAA7C,OAAA,EAAAwH,KAEAA,KAAAD,KAAA,SAAAqH,EAAArM,GACAmE,EAAA2J,EAAA9N,EAAAA,EAAAR,WAGAQ,EAAA,GAAA6N,EAAA7N,EAAAiO,YACA,GAAAJ,EAAA7N,EAAAkO,WACA,GAAAL,EAAA7N,EACA,KAEAM,EAAAwF,QAAA,SAAAhG,GACA,GAAAkO,EAAAlO,EAAAA,EAAAiK,WAAA,OACA,KAAA5F,EAAA,MAAApG,GAAA+B,GAAA+H,QAEAnG,GAAAyC,EAAAgK,aAAArO,EAAAE,GAAA,SAAAuH,GACA,MAAAA,EAAAzI,UAAA,WAAAyI,EAAAzI,SAAA0F,eACA+C,EAAAnL,MAAA,oBAAAmL,EAAAnL,MAAAmL,EAAA6G,KACAvR,OAAA,KAAAJ,KAAAI,OAAA0K,EAAAxC,kBAUAhH,EAAAC,GAAA8P,EAAAF,EAAA,KAAA,UAAAC,EAAA,SAAA,UAAA,SAAAnJ,GAEA,MADA3G,GAAA2G,GAAAkJ,GAAA3I,MACAA,QAIAtB,EAAAwB,EAAA9H,UAAAU,EAAAC,GAGA2F,EAAA7B,KAAAA,EACA6B,EAAAxC,iBAAAA,EACApD,EAAA4F,MAAAA,EAEA5F,IAGAlB,QAAAV,MAAAA,MACAiE,SAAAvD,OAAAkB,IAAAlB,OAAAkB,EAAA5B,OAEA,SAAA4B,GACA,QAAAsQ,GAAAC,GACA,GAAAC,GAAAtJ,KAAAsJ,MAAAC,EAAAvJ,KAAAuJ,WACAC,EAAAH,EAAApK,MAAA,oBACAwK,EAAAJ,EAAApK,MAAA,2BACAyK,EAAAL,EAAApK,MAAA,wBACA0K,EAAAN,EAAApK,MAAA,2BACA2K,GAAAF,GAAAL,EAAApK,MAAA,0BACA4K,EAAAR,EAAApK,MAAA,+BACA6K,EAAAD,GAAAR,EAAApK,MAAA,YACA8K,EAAAV,EAAApK,MAAA,oBACA+K,EAAAX,EAAApK,MAAA,mBACAgL,EAAAZ,EAAApK,MAAA,mCACAiL,EAAAb,EAAApK,MAAA,6BACAkL,EAAAd,EAAApK,MAAA,+BACAmL,EAAAf,EAAApK,MAAA,YACAoL,EAAAhB,EAAApK,MAAA,qBAAAoK,EAAApK,MAAA,mBACAqL,EAAAjB,EAAApK,MAAA,qBACAsL,EAAAlB,EAAApK,MAAA,iBACAuL,EAAAhB,GAAAH,EAAApK,MAAA,cAAAoL,EACAI,EAAApB,EAAApK,MAAA,iDAAAoL,EACAE,EAAAlB,EAAApK,MAAA,mBAQAsK,EAAAC,SAAAA,KAAAD,EAAAmB,QAAAlB,EAAA,IAEAC,IAAAH,EAAAG,SAAA,EAAAH,EAAAoB,QAAAjB,EAAA,IACAG,IAAAD,IAAAL,EAAAqB,IAAArB,EAAAM,QAAA,EAAAN,EAAAoB,QAAAd,EAAA,GAAAxQ,QAAA,KAAA,MACAsQ,IAAAJ,EAAAqB,IAAArB,EAAAI,MAAA,EAAAJ,EAAAoB,QAAAhB,EAAA,GAAAtQ,QAAA,KAAA,MACAuQ,IAAAL,EAAAqB,IAAArB,EAAAK,MAAA,EAAAL,EAAAoB,QAAAf,EAAA,GAAAA,EAAA,GAAAvQ,QAAA,KAAA,KAAA,MACAyQ,IAAAP,EAAAO,OAAA,EAAAP,EAAAoB,QAAAb,EAAA,IACAC,IAAAR,EAAAQ,UAAA,GACAG,IAAAX,EAAAW,YAAA,EAAAX,EAAAoB,QAAAT,EAAA,IACAC,IAAAZ,EAAAY,MAAA,EAAAZ,EAAAoB,QAAAR,EAAA,IACAC,IAAAb,EAAAa,aAAA,EAAAb,EAAAoB,QAAAP,EAAA,IACAC,IAAAb,EAAAa,UAAA,GACAL,IAAAT,EAAAS,QAAA,EAAAT,EAAAoB,QAAAX,EAAA,IACAC,IAAAT,EAAAS,MAAA,EAAAT,EAAAmB,QAAAV,EAAA,KACAA,GAAAV,EAAAG,SAAAJ,EAAApK,MAAA,iBAAAsK,EAAAS,MAAA,GACAK,IAAAd,EAAAc,QAAA,EAAAd,EAAAmB,QAAAL,EAAA,IACAC,IAAAf,EAAAe,SAAA,EAAAf,EAAAmB,QAAAJ,EAAA,IACAC,IAAAhB,EAAAgB,IAAA,EAAAhB,EAAAmB,QAAAH,EAAA,IACAC,IAAAnB,EAAApK,MAAA,WAAAqK,EAAAqB,OAAApB,EAAAiB,QAAA,GACAC,IAAAlB,EAAAkB,SAAA,GACAF,IAAAhB,EAAAgB,IAAA,EAAAhB,EAAAmB,QAAAH,EAAA,IAEAjB,EAAAsB,UAAAlB,GAAAU,GAAAX,IAAAJ,EAAApK,MAAA,WACAqL,GAAAjB,EAAApK,MAAA,WAAAsL,IAAAlB,EAAApK,MAAA,UAAAoK,EAAApK,MAAA,UACAqK,EAAAuB,QAAAvB,EAAAsB,QAAAtB,EAAAK,QAAAF,GAAAG,GAAAC,GAAAI,GAAAC,GACAG,GAAAhB,EAAApK,MAAA,YAAAoL,GAAAhB,EAAApK,MAAA,oBACAqL,GAAAjB,EAAApK,MAAA,WAAAsL,GAAAlB,EAAApK,MAAA,WAGAmK,EAAA5R,KAAAsB,EAAAgS,UAAAC,WAEAjS,EAAAkS,SAAA5B,GAEAlS,OAEA,SAAA4B,GAMA,QAAAmS,GAAAnR,GACA,MAAAA,GAAAoR,OAAApR,EAAAoR,KAAAA,KAEA,QAAAC,GAAArR,EAAAsR,EAAArS,EAAAuC,GAEA,GADA8P,EAAAlJ,EAAAkJ,GACAA,EAAAC,GAAA,GAAAC,GAAAC,EAAAH,EAAAC,GACA,QAAAG,EAAAP,EAAAnR,SAAAnB,OAAA,SAAA8S,GACA,MAAAA,MACAL,EAAA5O,GAAAiP,EAAAjP,GAAA4O,EAAA5O,MACA4O,EAAAC,IAAAC,EAAAhP,KAAAmP,EAAAJ,QACAtS,GAAAkS,EAAAQ,EAAA1S,MAAAkS,EAAAlS,OACAuC,GAAAmQ,EAAAC,KAAApQ,KAGA,QAAA4G,GAAAkJ,GACA,GAAAO,IAAA,GAAAP,GAAAjJ,MAAA,IACA,QAAA3F,EAAAmP,EAAA,GAAAN,GAAAM,EAAAjR,MAAA,GAAA2H,OAAAsF,KAAA,MAEA,QAAA4D,GAAAF,GACA,MAAA,IAAA5R,QAAA,UAAA4R,EAAAjS,QAAA,IAAA,SAAA,WAGA,QAAAwS,GAAAC,EAAA9S,EAAA+S,GACA,UAAAhT,EAAA3B,KAAA0U,GAAA/S,EAAAiH,KAAA8L,EAAAC,GACAD,EAAA1J,MAAA,MAAAtB,QAAA,SAAA1J,GAAA2U,EAAA3U,EAAA4B,KAGA,QAAAgT,GAAAN,EAAAO,GACA,MAAAP,GAAAQ,MACA,SAAAR,EAAAjP,GAAA,QAAAiP,EAAAjP,MACAwP,EAGA,QAAAE,GAAA/U,GACA,MAAAgV,GAAAhV,IAAAA,EAGA,QAAA4L,GAAAjJ,EAAA+R,EAAA9S,EAAAuC,EAAA8Q,EAAAC,GACA,GAAAC,GAAArB,EAAAnR,GAAAyS,EAAAf,EAAAc,KAAAd,EAAAc,MACAV,GAAAC,EAAA9S,EAAA,SAAAqS,EAAArS,GACA,GAAA0S,GAAAvJ,EAAAkJ,EACAK,GAAA1S,GAAAA,EACA0S,EAAAC,IAAApQ,EAEAmQ,EAAAjP,IAAA2P,KAAApT,EAAA,SAAAyD,GACA,GAAAgQ,GAAAhQ,EAAAiQ,aACA,QAAAD,GAAAA,IAAAxM,OAAAlH,EAAAqI,SAAAnB,KAAAwM,GACAf,EAAA1S,GAAAE,MAAA+G,KAAAW,WADA,SAGA8K,EAAAQ,IAAAG,GAAAA,EAAArT,EAAAqS,EACA,IAAAvJ,GAAA4J,EAAAQ,KAAAlT,CACA0S,GAAAiB,MAAA,SAAAlQ,GACA,GAAA8G,GAAAzB,EAAA5I,MAAAa,GAAA0C,GAAAxD,OAAAwD,EAAAwJ,MAEA,OADA1C,MAAA,IAAA9G,EAAAmQ,iBAAAnQ,EAAAoQ,mBACAtJ,GAEAmI,EAAAlK,EAAAgL,EAAA/T,OACA+T,EAAAxK,KAAA0J,GACA,oBAAA3R,IACAA,EAAA0I,iBAAA0J,EAAAT,EAAAjP,GAAAiP,EAAAiB,MAAAX,EAAAN,EAAAY,MAGA,QAAAzJ,GAAA9I,EAAA+R,EAAA9S,EAAAuC,EAAA+Q,GACA,GAAAC,GAAArB,EAAAnR,EACA8R,GAAAC,GAAA,GAAA9S,EAAA,SAAAqS,EAAArS,GACAoS,EAAArR,EAAAsR,EAAArS,EAAAuC,GAAAuF,QAAA,SAAA4K,SACAD,GAAAc,GAAAb,EAAAlK,GACA,uBAAAzH,IACAA,EAAA+S,oBAAAX,EAAAT,EAAAjP,GAAAiP,EAAAiB,MAAAX,EAAAN,EAAAY,QAiDA,QAAAS,GAAA1B,GACA,GAAAlQ,GAAAwR,GAAAK,cAAA3B,EACA,KAAAlQ,IAAAkQ,GACA4B,EAAA1Q,KAAApB,IAAAC,SAAAiQ,EAAAlQ,KAAAwR,EAAAxR,GAAAkQ,EAAAlQ,GASA,OAPApC,GAAAiH,KAAAkN,EAAA,SAAA1T,EAAA2T,GACAR,EAAAnT,GAAA,WAEA,MADAyG,MAAAkN,GAAAC,EACA/B,EAAA7R,GAAAN,MAAAmS,EAAAzK,YAEA+L,EAAAQ,GAAAE,IAEAV,EAIA,QAAAW,GAAAjC,GACA,KAAA,oBAAAA,IAAA,CACAA,EAAAkC,kBAAA,CACA,IAAAC,GAAAnC,EAAAuB,cACAvB,GAAAuB,eAAA,WACAvB,EAAAkC,kBAAA,EACAC,EAAA/V,KAAA4T,KAhJA,GAAAI,IAAA1S,EAAA4F,MAAAU,QAAA8L,EAAA,EAAAsC,KACArB,GAAAsB,WAAA,YAAAC,WAAA,WAEAF,GAAAG,MAAAH,EAAAI,UAAAJ,EAAAK,QAAAL,EAAAM,UAAA,cA2EAhV,EAAAsS,OAAArI,IAAAA,EAAAH,OAAAA,GAEA9J,EAAA4T,MAAA,SAAA3T,EAAAyC,GACA,GAAA1C,EAAArB,WAAAsB,GAAA,CACA,GAAAgV,GAAA,WAAA,MAAAhV,GAAAE,MAAAuC,EAAAmF,WAEA,OADAoN,GAAA7C,KAAAD,EAAAlS,GACAgV,EACA,GAAA,gBAAAvS,GACA,MAAA1C,GAAA4T,MAAA3T,EAAAyC,GAAAzC,EAEA,MAAA,IAAAiV,WAAA,sBAIAlV,EAAAC,GAAAkV,KAAA,SAAA7C,EAAAvJ,GACA,MAAA7B,MAAAD,KAAA,WACAgD,EAAA/C,KAAAoL,EAAAvJ,MAGA/I,EAAAC,GAAAmV,OAAA,SAAA9C,EAAAvJ,GACA,MAAA7B,MAAAD,KAAA,WACA6C,EAAA5C,KAAAoL,EAAAvJ,MAGA/I,EAAAC,GAAAoV,IAAA,SAAA/C,EAAAvJ,GACA,MAAA7B,MAAAD,KAAA,SAAAwB,EAAAzH,GACAiJ,EAAA/C,KAAAoL,EAAAvJ,EAAA,KAAA,SAAA9I,EAAA5B,GACA,MAAA,YACA,GAAAmM,GAAAvK,EAAAE,MAAAa,EAAA6G,UAEA,OADAiC,GAAA9I,EAAA3C,EAAA4B,GACAuK,OAMA,IAAA6J,GAAA,WAAA,OAAA,GACAC,EAAA,WAAA,OAAA,GACAJ,EAAA,sBACAC,GACAN,eAAA,qBACAyB,yBAAA,gCACAxB,gBAAA,uBA6BA9T,GAAAC,GAAAsV,SAAA,SAAA/S,EAAA8P,EAAAvJ,GACA,MAAA7B,MAAAD,KAAA,SAAAwB,EAAAzH,GACAiJ,EAAAjJ,EAAAsR,EAAAvJ,EAAAvG,EAAA,SAAAvC,GACA,MAAA,UAAAyD,GACA,GAAA8R,GAAArP,EAAAnG,EAAA0D,EAAAzB,QAAA0I,QAAAnI,EAAAxB,GAAA2I,IAAA,EACA,OAAAxD,IACAqP,EAAAxV,EAAAgC,OAAAgS,EAAAtQ,IAAA+R,cAAAtP,EAAAuP,UAAA1U,IACAf,EAAAE,MAAAgG,GAAAqP,GAAAtV,UAAA0B,MAAAlD,KAAAmJ,UAAA,MAFA,aAQA7H,EAAAC,GAAA0V,WAAA,SAAAnT,EAAA8P,EAAAvJ,GACA,MAAA7B,MAAAD,KAAA,WACA6C,EAAA5C,KAAAoL,EAAAvJ,EAAAvG,MAIAxC,EAAAC,GAAA2V,KAAA,SAAAtD,EAAAvJ,GAEA,MADA/I,GAAAmB,SAAAE,MAAAkU,SAAArO,KAAA1E,SAAA8P,EAAAvJ,GACA7B,MAEAlH,EAAAC,GAAA4V,IAAA,SAAAvD,EAAAvJ,GAEA,MADA/I,GAAAmB,SAAAE,MAAAsU,WAAAzO,KAAA1E,SAAA8P,EAAAvJ,GACA7B,MAGAlH,EAAAC,GAAA6V,GAAA,SAAAxD,EAAA9P,EAAAuG,GACA,OAAAvG,GAAAxC,EAAArB,WAAA6D,GACA0E,KAAAiO,KAAA7C,EAAA9P,GAAAuG,GAAA7B,KAAAqO,SAAA/S,EAAA8P,EAAAvJ,IAEA/I,EAAAC,GAAA8V,IAAA,SAAAzD,EAAA9P,EAAAuG,GACA,OAAAvG,GAAAxC,EAAArB,WAAA6D,GACA0E,KAAAkO,OAAA9C,EAAA9P,GAAAuG,GAAA7B,KAAAyO,WAAAnT,EAAA8P,EAAAvJ,IAGA/I,EAAAC,GAAA+V,QAAA,SAAA1D,EAAApF,GAIA,OAHA,gBAAAoF,IAAAtS,EAAAb,cAAAmT,MAAAA,EAAAtS,EAAAiW,MAAA3D,IACAiC,EAAAjC,GACAA,EAAApF,KAAAA,EACAhG,KAAAD,KAAA,WAEA,iBAAAC,MAAAA,KAAAgP,cAAA5D,GACAtS,EAAAkH,MAAAiP,eAAA7D,EAAApF,MAMAlN,EAAAC,GAAAkW,eAAA,SAAA7D,EAAApF,GACA,GAAAxJ,GAAA8G,CAUA,OATAtD,MAAAD,KAAA,SAAAwB,EAAAzH,GACA0C,EAAAsQ,EAAA,gBAAA1B,GAAAtS,EAAAiW,MAAA3D,GAAAA,GACA5O,EAAAwJ,KAAAA,EACAxJ,EAAAzB,OAAAjB,EACAhB,EAAAiH,KAAAoL,EAAArR,EAAAsR,EAAAjU,MAAAiU,GAAA,SAAA7J,EAAAkK,GAEA,MADAnI,GAAAmI,EAAAiB,MAAAlQ,GACAA,EAAA0S,iCAAA,EAAA,WAGA5L,GAIA,4KAEAnB,MAAA,KAAAtB,QAAA,SAAAuK,GACAtS,EAAAC,GAAAqS,GAAA,SAAAvJ,GACA,MAAAA,GACA7B,KAAAiO,KAAA7C,EAAAvJ,GACA7B,KAAA8O,QAAA1D,OAIA,QAAA,QAAAvK,QAAA,SAAAtH,GACAT,EAAAC,GAAAQ,GAAA,SAAAsI,GAMA,MALAA,GAAA7B,KAAAiO,KAAA1U,EAAAsI,GACA7B,KAAAD,KAAA,WACA,IAAAC,KAAAzG,KACA,MAAAiD,OAEAwD,QAIAlH,EAAAiW,MAAA,SAAA5X,EAAAsP,GACA,gBAAAtP,KAAAsP,EAAAtP,EAAAA,EAAAsP,EAAAtP,KACA,IAAAiU,GAAAnR,SAAAkV,YAAA3B,EAAArW,IAAA,UAAAiY,GAAA,CACA,IAAA3I,EAAA,IAAA,GAAAlN,KAAAkN,GAAA,WAAAlN,EAAA6V,IAAA3I,EAAAlN,GAAA6R,EAAA7R,GAAAkN,EAAAlN,EAGA,OAFA6R,GAAAiE,UAAAlY,EAAAiY,GAAA,GACAhE,EAAAkE,mBAAA,WAAA,MAAAlE,GAAAkC,kBACAlC,IAGAlU,OAEA,SAAA4B,GAaA,QAAAyW,GAAA/T,EAAAgU,EAAAxJ,GACA,GAAAoF,GAAAtS,EAAAiW,MAAAS,EAEA,OADA1W,GAAA0C,GAAAsT,QAAA1D,EAAApF,IACAoF,EAAAkC,iBAIA,QAAAmC,GAAAC,EAAAlU,EAAAgU,EAAAxJ,GACA,MAAA0J,GAAAC,OAAAJ,EAAA/T,GAAAvB,EAAAuV,EAAAxJ,GAAA,OAMA,QAAA4J,GAAAF,GACAA,EAAAC,QAAA,IAAA7W,EAAA+W,UAAAJ,EAAAC,EAAA,KAAA,aAEA,QAAAI,GAAAJ,GACAA,EAAAC,WAAA7W,EAAA+W,QAAAJ,EAAAC,EAAA,KAAA,YAIA,QAAAK,GAAAC,EAAAN,GACA,GAAAlU,GAAAkU,EAAAlU,OACA,OAAAkU,GAAAO,WAAAzY,KAAAgE,EAAAwU,EAAAN,MAAA,GACAD,EAAAC,EAAAlU,EAAA,kBAAAwU,EAAAN,OAAA,GACA,MAEAD,GAAAC,EAAAlU,EAAA,YAAAwU,EAAAN,IAEA,QAAAQ,GAAAlK,EAAAgK,EAAAN,GACA,GAAAlU,GAAAkU,EAAAlU,QAAA2U,EAAA,SACAT,GAAAU,QAAA5Y,KAAAgE,EAAAwK,EAAAmK,EAAAH,GACAP,EAAAC,EAAAlU,EAAA,eAAAwU,EAAAN,EAAA1J,IACAqK,EAAAF,EAAAH,EAAAN,GAGA,QAAAY,GAAAC,EAAApZ,EAAA6Y,EAAAN,GACA,GAAAlU,GAAAkU,EAAAlU,OACAkU,GAAAa,MAAA/Y,KAAAgE,EAAAwU,EAAA7Y,EAAAoZ,GACAd,EAAAC,EAAAlU,EAAA,aAAAwU,EAAAN,EAAAa,GAAApZ,IACAkZ,EAAAlZ,EAAA6Y,EAAAN,GAGA,QAAAW,GAAAF,EAAAH,EAAAN,GACA,GAAAlU,GAAAkU,EAAAlU,OACAkU,GAAAc,SAAAhZ,KAAAgE,EAAAwU,EAAAG,GACAV,EAAAC,EAAAlU,EAAA,gBAAAwU,EAAAN,IACAI,EAAAJ,GAIA,QAAAzL,MAkFA,QAAAwM,GAAAC,GAEA,MADAA,KAAAA,EAAAA,EAAAvO,MAAA,IAAA,GAAA,IACAuO,IAAAA,GAAAC,EAAA,OACAD,GAAAE,EAAA,OACAC,EAAAvU,KAAAoU,GAAA,SACAI,EAAAxU,KAAAoU,IAAA,QAAA,OAGA,QAAAK,GAAAC,EAAAC,GACA,MAAA,IAAAA,EAAAD,GACAA,EAAA,IAAAC,GAAA7X,QAAA,YAAA,KAIA,QAAA8X,GAAAC,GACAA,EAAAC,aAAAD,EAAAnL,MAAA,UAAAlN,EAAA3B,KAAAga,EAAAnL,QACAmL,EAAAnL,KAAAlN,EAAAuY,MAAAF,EAAAnL,KAAAmL,EAAAG,eACAH,EAAAnL,MAAAmL,EAAAha,MAAA,OAAAga,EAAAha,KAAAoI,gBACA4R,EAAAH,IAAAD,EAAAI,EAAAH,IAAAG,EAAAnL,OAqFA,QAAAuL,GAAAP,EAAAhL,EAAAoK,EAAAoB,GACA,GAAAC,IAAA3Y,EAAArB,WAAAuO,EACA,QACAgL,IAAAA,EACAhL,KAAAyL,EAAAzL,EAAA7K,OACAiV,QAAAqB,EAAA3Y,EAAArB,WAAA2Y,GAAAA,EAAAjV,OAAA6K,EACAwL,SAAAC,EAAAD,GAAApB,EAAAA,GAsCA,QAAAsB,GAAAC,EAAAva,EAAAka,EAAAM,GACA,GAAAza,GAAAuB,EAAAI,EAAAT,QAAAjB,EACA0B,GAAAiH,KAAA3I,EAAA,SAAA8D,EAAAxD,GACAP,EAAA2B,EAAA3B,KAAAO,GACAka,IAAA1W,EAAAoW,EAAAM,EAAAA,EAAA,KAAAlZ,EAAA,GAAAwC,GAAA,MAEA0W,GAAAlZ,EAAAiZ,EAAA5O,IAAArL,EAAA6B,KAAA7B,EAAAA,OAEA,SAAAP,IAAAma,GAAA,UAAAna,EACAua,EAAAC,EAAAja,EAAA4Z,EAAApW,GACAyW,EAAA5O,IAAA7H,EAAAxD,KA/SA,GAEAwD,GACA3B,EAHAsY,EAAA,EACA5X,EAAArC,OAAAqC,SAGA6X,EAAA,sDACAjB,EAAA,qCACAC,EAAA,8BACAF,EAAA,mBACAD,EAAA,YACAoB,EAAA,OAeAjZ,GAAA+W,OAAA,EA0CA/W,EAAAkZ,UAAA,SAAAb,GACA,KAAA,QAAAA,IAAA,MAAArY,GAAAmZ,KAAAd,EAEA,IAgBAe,GAhBAC,EAAAhB,EAAAiB,cACAC,GAAAvZ,EAAArB,WAAA0a,GACAA,IAAAA,IAAA,WAAAN,EACAS,EAAArY,EAAAC,cAAA,UACAqY,EAAA,WACAC,aAAAN,GACApZ,EAAAwZ,GAAA1P,eACAhL,QAAAya,IAEAI,EAAA,SAAAtb,GACAob,IAGApb,GAAA,WAAAA,IAAAS,OAAAya,GAAApO,GACAqM,EAAA,KAAAnZ,GAAA,QAAA6Y,EAAAmB,IAEAnB,GAAAyC,MAAAA,EAEA,OAAA1C,GAAAC,EAAAmB,MAAA,GACAsB,EAAA,UACA,IAGA7a,OAAAya,GAAA,SAAArM,GACAuM,IACArC,EAAAlK,EAAAgK,EAAAmB,IAGAmB,EAAAI,QAAA,WAAAD,EAAA,UAEAH,EAAAnJ,IAAAgI,EAAAH,IAAA5X,QAAA,MAAA,IAAAiZ,GACAvZ,EAAA,QAAAiM,OAAAuN,GAEAnB,EAAAwB,QAAA,IAAAT,EAAAU,WAAA,WACAH,EAAA,YACAtB,EAAAwB,UAEA3C,IAGAlX,EAAA+Z,cAEA1b,KAAA,MAEA8Y,WAAAhM,EAEAmM,QAAAnM,EAEAsM,MAAAtM,EAEAuM,SAAAvM,EAEAzI,QAAA,KAEAmU,QAAA,EAEAK,IAAA,WACA,MAAA,IAAApY,QAAAkb,gBAGAC,SACAT,OAAA,0CACAU,KAAApC,EACAqC,IAAA,4BACAxT,KAAAkR,EACAjL,KAAA,cAGAwN,aAAA,EAEAP,QAAA,EAEAvB,aAAA,EAEA+B,OAAA,GAwBAra,EAAAmZ,KAAA,SAAAd,GACA,GAAAzB,GAAA5W,EAAAgC,UAAAqW,MACA,KAAAjW,IAAApC,GAAA+Z,aAAA1X,SAAAuU,EAAAxU,KAAAwU,EAAAxU,GAAApC,EAAA+Z,aAAA3X,GAEA0U,GAAAF,GAEAA,EAAAwD,cAAAxD,EAAAwD,YAAA,0BAAA5W,KAAAoT,EAAAsB,MACAvX,OAAA2Z,IAAAxb,OAAAyb,SAAAC,MAEA5D,EAAAsB,MAAAtB,EAAAsB,IAAApZ,OAAAyb,SAAA9b,YACA2Z,EAAAxB,GACAA,EAAAyD,SAAA,IAAAzD,EAAAsB,IAAAD,EAAArB,EAAAsB,IAAA,KAAAuC,KAAAC,OAEA,IAAAhC,GAAA9B,EAAA8B,SAAAiC,EAAA,MAAAnX,KAAAoT,EAAAsB,IACA,IAAA,SAAAQ,GAAAiC,EAIA,MAHAA,KACA/D,EAAAsB,IAAAD,EAAArB,EAAAsB,IACAtB,EAAAgE,MAAAhE,EAAAgE,MAAA,KAAAhE,EAAAgE,SAAA,EAAA,GAAA,eACA5a,EAAAkZ,UAAAtC,EAGA,IAGAwC,GAHAxB,EAAAhB,EAAAqD,QAAAvB,GACAmC,KACAC,EAAA,iBAAAtX,KAAAoT,EAAAsB,KAAAvX,OAAAoG,GAAAjI,OAAAyb,SAAAO,SACA5D,EAAAN,EAAAM,KAEAN,GAAAwD,cAAAS,EAAA,oBAAA,kBACAjD,IACAiD,EAAA,OAAAjD,EACAA,EAAArR,QAAA,KAAA,KAAAqR,EAAAA,EAAAvO,MAAA,IAAA,GAAA,IACA6N,EAAA6D,kBAAA7D,EAAA6D,iBAAAnD,KAEAhB,EAAAoE,aAAApE,EAAAoE,eAAA,GAAApE,EAAA1J,MAAA,OAAA0J,EAAAvY,KAAAoI,iBACAoU,EAAA,gBAAAjE,EAAAoE,aAAA,qCACApE,EAAAqE,QAAAjb,EAAAgC,OAAA6Y,EAAAjE,EAAAqE,aAEA/D,EAAAgE,mBAAA,WACA,GAAA,GAAAhE,EAAAzN,WAAA,CACAyN,EAAAgE,mBAAA/P,EACAuO,aAAAN,EACA,IAAA5O,GAAAiN,GAAA,CACA,IAAAP,EAAAG,QAAA,KAAAH,EAAAG,OAAA,KAAA,KAAAH,EAAAG,QAAA,GAAAH,EAAAG,QAAA,SAAAyD,EAAA,CACApC,EAAAA,GAAAf,EAAAT,EAAAiE,kBAAA,iBACA3Q,EAAA0M,EAAAkE,YAEA,KAEA,UAAA1C,GAAA,EAAA2C,MAAA7Q,GACA,OAAAkO,EAAAlO,EAAA0M,EAAAoE,YACA,QAAA5C,IAAAlO,EAAAyO,EAAAzV,KAAAgH,GAAA,KAAAxK,EAAAyD,UAAA+G,IACA,MAAA9G,GAAA+T,EAAA/T,EAEA+T,EAAAD,EAAAC,EAAA,cAAAP,EAAAN,GACAQ,EAAA5M,EAAA0M,EAAAN,OAEAY,GAAAN,EAAAqE,YAAA,KAAArE,EAAAG,OAAA,QAAA,QAAAH,EAAAN,IAKA,IAAA4E,GAAA,SAAA5E,GAAAA,EAAA4E,OAAA,CACAtE,GAAAuE,KAAA7E,EAAAvY,KAAAuY,EAAAsB,IAAAsD,EAEA,KAAA/a,IAAAmW,GAAAqE,QAAA/D,EAAAwE,iBAAAjb,EAAAmW,EAAAqE,QAAAxa,GAEA,OAAAwW,GAAAC,EAAAN,MAAA,GACAM,EAAAyC,SACA,IAGA/C,EAAAiD,QAAA,IAAAT,EAAAU,WAAA,WACA5C,EAAAgE,mBAAA/P,EACA+L,EAAAyC,QACAnC,EAAA,KAAA,UAAAN,EAAAN,IACAA,EAAAiD,UAGA3C,EAAAyE,KAAA/E,EAAA1J,KAAA0J,EAAA1J,KAAA,MACAgK,IAcAlX,EAAA2J,IAAA,SAAAuO,EAAAhL,EAAAoK,EAAAoB,GACA,MAAA1Y,GAAAmZ,KAAAV,EAAAtY,MAAA,KAAA0H,aAGA7H,EAAA4b,KAAA,SAAA1D,EAAAhL,EAAAoK,EAAAoB,GACA,GAAAL,GAAAI,EAAAtY,MAAA,KAAA0H,UAEA,OADAwQ,GAAAha,KAAA,OACA2B,EAAAmZ,KAAAd,IAGArY,EAAA6b,QAAA,SAAA3D,EAAAhL,EAAAoK,GACA,GAAAe,GAAAI,EAAAtY,MAAA,KAAA0H,UAEA,OADAwQ,GAAAK,SAAA,OACA1Y,EAAAmZ,KAAAd,IAGArY,EAAAC,GAAA6b,KAAA,SAAA5D,EAAAhL,EAAAoK,GACA,IAAApQ,KAAAxH,OAAA,MAAAwH,KACA,IAAA1E,GAAA2J,EAAAjF,KAAA2L,EAAAqF,EAAA7O,MAAA,MACAgP,EAAAI,EAAAP,EAAAhL,EAAAoK,GACAvO,EAAAsP,EAAAf,OASA,OARAzE,GAAAnT,OAAA,IAAA2Y,EAAAH,IAAArF,EAAA,GAAArQ,EAAAqQ,EAAA,IACAwF,EAAAf,QAAA,SAAAyE,GACA5P,EAAAxF,KAAAnE,EACAxC,EAAA,SAAA2G,KAAAoV,EAAAzb,QAAA0Y,EAAA,KAAArR,KAAAnF,GACAuZ,GACAhT,GAAAA,EAAA5I,MAAAgM,EAAAtE,YAEA7H,EAAAmZ,KAAAd,GACAnR,KAGA,IAAA8U,GAAAC,kBAgBAjc,GAAAuY,MAAA,SAAAja,EAAAka,GACA,GAAAK,KAGA,OAFAA,GAAA5O,IAAA,SAAAiS,EAAAC,GAAAjV,KAAA+B,KAAA+S,EAAAE,GAAA,IAAAF,EAAAG,KACAvD,EAAAC,EAAAva,EAAAka,GACAK,EAAAhK,KAAA,KAAAvO,QAAA,OAAA,OAEAlC,OAEA,SAAA4B,GACAA,EAAAC,GAAAmc,eAAA,WACA,GAAA5S,GAAAgB,IAYA,OAXAxK,MAAA4B,MAAAlD,KAAAwI,KAAAyC,IAAA,GAAAb,WAAA7B,KAAA,WACAuC,EAAAxJ,EAAAkH,KACA,IAAA7I,GAAAmL,EAAArC,KAAA,OACA,aAAAD,KAAAnG,SAAAR,gBACA2G,KAAAmV,UAAA,UAAAhe,GAAA,SAAAA,GAAA,UAAAA,IACA,SAAAA,GAAA,YAAAA,GAAA6I,KAAAoV,UACA9R,EAAAvB,MACAxI,KAAA+I,EAAArC,KAAA,QACAvI,MAAA4K,EAAAsD,UAGAtC,GAGAxK,EAAAC,GAAA2Y,UAAA,WACA,GAAApO,KAIA,OAHAtD,MAAAkV,iBAAArU,QAAA,SAAAwU,GACA/R,EAAAvB,KAAAgT,mBAAAM,EAAA9b,MAAA,IAAAwb,mBAAAM,EAAA3d,UAEA4L,EAAAqE,KAAA,MAGA7O,EAAAC,GAAAuc,OAAA,SAAAzT,GACA,GAAAA,EAAA7B,KAAAiO,KAAA,SAAApM,OACA,IAAA7B,KAAAxH,OAAA,CACA,GAAA4S,GAAAtS,EAAAiW,MAAA,SACA/O,MAAAmD,GAAA,GAAA2L,QAAA1D,GACAA,EAAAkC,kBAAAtN,KAAAyC,IAAA,GAAA6S,SAEA,MAAAtV,QAGA9I,OAEA,SAAA4B,EAAAqC,GAUA,QAAAjC,GAAAC,GAAA,MAAAA,GAAAC,QAAA,iBAAA,SAAAC,cACA,QAAAkc,GAAAhc,GAAA,MAAAic,GAAAA,EAAAjc,EAAAA,EAAAF,cAVA,GAAAmc,GAIAC,EACAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EANAC,EAAA,GACAC,GAAAC,OAAA,SAAAC,IAAA,GAAAC,EAAA,IAAAC,GAAA,MACAtc,EAAArC,OAAAqC,SAAAuc,EAAAvc,EAAAC,cAAA,OACAuc,EAAA,8EAIAC,IAKA5d,GAAAiH,KAAAoW,EAAA,SAAAQ,EAAAvL,GACA,MAAAoL,GAAApS,MAAAuS,EAAA,wBAAAxb,GACA+a,EAAA,IAAAS,EAAAtd,cAAA,IACAmc,EAAApK,GACA,GAHA,SAOAqK,EAAAS,EAAA,YACAQ,EAAAhB,EAAAQ,EAAA,uBACAQ,EAAAf,EAAAO,EAAA,uBACAQ,EAAAb,EAAAK,EAAA,oBACAQ,EAAAd,EAAAM,EAAA,8BACAQ,EAAAZ,EAAAI,EAAA,kBACAQ,EAAAX,EAAAG,EAAA,sBACAQ,EAAAT,EAAAC,EAAA,mBACAQ,EAAAV,EAAAE,EAAA,6BAAA,GAEApd,EAAA8d,IACA/H,IAAA2G,IAAAra,GAAAqb,EAAApS,MAAAsR,qBAAAva,EACA0b,QAAAC,SAAA,IAAAC,KAAA,IAAAC,KAAA,KACAC,UAAAf,EACAgB,cAAA3B,EAAA,iBACA4B,aAAA5B,EAAA,iBAGAzc,EAAAC,GAAAqe,QAAA,SAAA1X,EAAA2X,EAAAC,EAAAzV,EAAA0V,GAMA,MALAze,GAAAb,cAAAof,KACAC,EAAAD,EAAAG,OAAA3V,EAAAwV,EAAA7G,SAAA+G,EAAAF,EAAAE,MAAAF,EAAAA,EAAAA,UACAA,IAAAA,GAAA,gBAAAA,GAAAA,EACAve,EAAA8d,GAAAC,OAAAQ,IAAAve,EAAA8d,GAAAC,OAAAC,UAAA,KACAS,IAAAA,EAAAlP,WAAAkP,GAAA,KACAvX,KAAAyX,KAAA/X,EAAA2X,EAAAC,EAAAzV,EAAA0V,IAGAze,EAAAC,GAAA0e,KAAA,SAAA/X,EAAA2X,EAAAC,EAAAzV,EAAA0V,GACA,GAAArc,GAAAwc,EACAC,EADAC,KAAAC,EAAA,GACAC,EAAA9X,KAAA+X,EAAAjf,EAAA8d,GAAAM,aAMA,IAJAG,IAAAlc,IAAAkc,EAAA,IACAE,IAAApc,IAAAoc,EAAA,GACAze,EAAA8d,GAAA/H,MAAAwI,EAAA,GAEA,gBAAA3X,GAEAkY,EAAA9B,GAAApW,EACAkY,EAAA7B,GAAAsB,EAAA,IACAO,EAAA3B,GAAAsB,EAAA,IACAK,EAAA5B,GAAAsB,GAAA,SACAS,EAAAjf,EAAA8d,GAAAO,iBACA,CACAO,IAEA,KAAAxc,IAAAwE,GACA+W,EAAAna,KAAApB,GAAA2c,GAAA3c,EAAA,IAAAwE,EAAAxE,GAAA,MACA0c,EAAA1c,GAAAwE,EAAAxE,GAAAwc,EAAA3V,KAAA7I,EAAAgC,IAEA2c,KAAAD,EAAAnC,GAAAoC,EAAAH,EAAA3V,KAAA0T,IACA4B,EAAA,GAAA,gBAAA3X,KACAkY,EAAAlC,GAAAgC,EAAA/P,KAAA,MACAiQ,EAAAjC,GAAA0B,EAAA,IACAO,EAAA/B,GAAA0B,EAAA,IACAK,EAAAhC,GAAA0B,GAAA,UAuBA,MAnBAK,GAAA,SAAAvM,GACA,GAAA,mBAAAA,GAAA,CACA,GAAAA,EAAArQ,SAAAqQ,EAAAmD,cAAA,MACAzV,GAAAsS,EAAArQ,QAAAmT,OAAA6J,EAAAJ,GAEA7e,EAAAkH,MAAAoF,IAAAsR,GACA7U,GAAAA,EAAArK,KAAAwI,OAEAqX,EAAA,GAAArX,KAAAiO,KAAA8J,EAAAJ,GAGA3X,KAAA2C,QAAA3C,KAAAyC,IAAA,GAAAuV,WAEAhY,KAAAoF,IAAAwS,GAEA,GAAAP,GAAAzE,WAAA,WACAkF,EAAA/X,KAAA,WAAA4X,EAAAngB,KAAAwI,SACA,GAEAA,MAGAwW,EAAA,MACAtf,OAEA,SAAA4B,GAMA,QAAAmf,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAArR,MAAAsR,IAAAJ,EAAAC,IACAnR,KAAAsR,IAAAF,EAAAC,GAAAH,EAAAC,EAAA,EAAA,OAAA,QAAAC,EAAAC,EAAA,EAAA,KAAA,OAGA,QAAAE,KACAC,EAAA,KACAC,EAAApV,OACAoV,EAAAnW,GAAAwM,QAAA,WACA2J,MAIA,QAAAC,KACAF,GAAAhG,aAAAgG,GACAA,EAAA,KAGA,QAAAG,KACAC,GAAApG,aAAAoG,GACAC,GAAArG,aAAAqG,GACAC,GAAAtG,aAAAsG,GACAN,GAAAhG,aAAAgG,GACAI,EAAAC,EAAAC,EAAAN,EAAA,KACAC,KAGA,QAAAM,GAAA3N,GACA,MAAAA,GAAA4N,aAAA5N,EAAA6N,sBAAA7N,EAAA8N,UAjCA,GACAN,GAAAC,EAAAC,EAAAN,EAEAW,EAHAV,KAEAW,EAAA,GAkCAtgB,GAAAmB,UAAAsG,MAAA,WACA,GAAAiT,GAAA6F,EAAAC,EAAAC,EAAA,EAAAC,EAAA,CAEA,cAAA5hB,UACAuhB,EAAA,GAAAM,WACAN,EAAApe,OAAAd,SAAAE,MAGArB,EAAAmB,UACAgU,KAAA,eAAA,SAAAzR,GACA,GAAAkd,GACAld,EAAAmd,UAAA,EAAA,QAAAnd,EAAAmd,UAAA,GAAA,OAAAnd,EAAAod,UAAA,EAAA,OAAApd,EAAAod,UAAA,GAAA,KAAA,IACAF,KACAjB,EAAAnW,GAAAwM,QAAA,SACA2J,EAAAnW,GAAAwM,QAAA,QAAA4K,MAGA9K,GAAA,2BAAA,SAAApS,IACA,iBAAAA,EAAArF,MAAA4hB,EAAAvc,MACA8c,EAAA,iBAAA9c,EAAArF,KAAAqF,EAAAA,EAAAqd,QAAA,GACArG,EAAAD,KAAAC,MACA6F,EAAA7F,GAAAiF,EAAApV,MAAAmQ,GACAiF,EAAAnW,GAAAxJ,EAAA,WAAAwgB,GAAAve,OACAue,EAAAve,OAAAue,EAAAve,OAAAR,YACAqe,GAAApG,aAAAoG,GACAH,EAAAP,GAAAoB,EAAAQ,MACArB,EAAAL,GAAAkB,EAAAS,MACAV,EAAA,GAAA,KAAAA,IAAAZ,EAAAuB,aAAA,GACAvB,EAAApV,KAAAmQ,EACAgF,EAAA5F,WAAA2F,EAAAa,GAEAD,GAAA,iBAAA3c,EAAArF,MAAAgiB,EAAAc,WAAAzd,EAAA0d,cAEAtL,GAAA,0BAAA,SAAApS,IACA,iBAAAA,EAAArF,MAAA4hB,EAAAvc,MACA8c,EAAA,iBAAA9c,EAAArF,KAAAqF,EAAAA,EAAAqd,QAAA,GACAnB,IACAD,EAAAN,GAAAmB,EAAAQ,MACArB,EAAAJ,GAAAiB,EAAAS,MAEAR,GAAAvS,KAAAsR,IAAAG,EAAAP,GAAAO,EAAAN,IACAqB,GAAAxS,KAAAsR,IAAAG,EAAAL,GAAAK,EAAAJ,OAEAzJ,GAAA,uBAAA,SAAApS,IACA,eAAAA,EAAArF,MAAA4hB,EAAAvc,MACAkc,IAGAD,EAAAN,IAAAnR,KAAAsR,IAAAG,EAAAP,GAAAO,EAAAN,IAAA,IACAM,EAAAJ,IAAArR,KAAAsR,IAAAG,EAAAL,GAAAK,EAAAJ,IAAA,GAEAS,EAAAlG,WAAA,WACA6F,EAAAnW,GAAAwM,QAAA,SACA2J,EAAAnW,GAAAwM,QAAA,QAAAmJ,EAAAQ,EAAAP,GAAAO,EAAAN,GAAAM,EAAAL,GAAAK,EAAAJ,KACAI,MACA,GAGA,QAAAA,KAGA,GAAAc,GAAA,GAAAC,EAGAX,EAAAjG,WAAA,WAIA,GAAAxH,GAAAtS,EAAAiW,MAAA,MACA3D,GAAA+O,YAAAxB,EACAF,EAAAnW,GAAAwM,QAAA1D,GAGAqN,EAAAuB,aACAvB,EAAAnW,GAAAwM,QAAA,aACA2J,MAKAG,EAAAhG,WAAA,WACAgG,EAAA,KACAH,EAAAnW,GAAAwM,QAAA,aACA2J,MACA,MAEA,GAEAA,MAEAc,EAAAC,EAAA,KAMA5K,GAAA,8BAAA+J,GAIA7f,EAAAlB,QAAAgX,GAAA,SAAA+J,MAGA,QAAA,YAAA,aAAA,UAAA,YACA,YAAA,MAAA,YAAA,WAAA9X,QAAA,SAAA2O,GACA1W,EAAAC,GAAAyW,GAAA,SAAA3N,GAAA,MAAA7B,MAAA4O,GAAAY,EAAA3N,OAEA3K,OCjsDA,WAQA4B,EAAA,QAAA6U,MAAA,WACAyM,MAAA","file":"index-14338ed084.min.js","sourcesContent":["/* Zepto v1.0-132-g047da34 - zepto detect event ajax form fx touch - zeptojs.com/license */\r\n\r\n\r\nvar Zepto = (function() {\r\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\r\n    document = window.document,\r\n    elementDisplay = {}, classCache = {},\r\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\r\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\r\n    rootNodeRE = /^(?:body|html)$/i,\r\n\r\n    // special attributes that should be get/set via method calls\r\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\r\n\r\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\r\n    table = document.createElement('table'),\r\n    tableRow = document.createElement('tr'),\r\n    containers = {\r\n      'tr': document.createElement('tbody'),\r\n      'tbody': table, 'thead': table, 'tfoot': table,\r\n      'td': tableRow, 'th': tableRow,\r\n      '*': document.createElement('div')\r\n    },\r\n    readyRE = /complete|loaded|interactive/,\r\n    classSelectorRE = /^\\.([\\w-]+)$/,\r\n    idSelectorRE = /^#([\\w-]*)$/,\r\n    tagSelectorRE = /^[\\w-]+$/,\r\n    class2type = {},\r\n    toString = class2type.toString,\r\n    zepto = {},\r\n    camelize, uniq,\r\n    tempParent = document.createElement('div')\r\n\r\n  zepto.matches = function(element, selector) {\r\n    if (!element || element.nodeType !== 1) return false\r\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\r\n                          element.oMatchesSelector || element.matchesSelector\r\n    if (matchesSelector) return matchesSelector.call(element, selector)\r\n    // fall back to performing a selector:\r\n    var match, parent = element.parentNode, temp = !parent\r\n    if (temp) (parent = tempParent).appendChild(element)\r\n    match = ~zepto.qsa(parent, selector).indexOf(element)\r\n    temp && tempParent.removeChild(element)\r\n    return match\r\n  }\r\n\r\n  function type(obj) {\r\n    return obj == null ? String(obj) :\r\n      class2type[toString.call(obj)] || \"object\"\r\n  }\r\n\r\n  function isFunction(value) { return type(value) == \"function\" }\r\n  function isWindow(obj)     { return obj != null && obj == obj.window }\r\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\r\n  function isObject(obj)     { return type(obj) == \"object\" }\r\n  function isPlainObject(obj) {\r\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\r\n  }\r\n  function isArray(value) { return value instanceof Array }\r\n  function likeArray(obj) { return typeof obj.length == 'number' }\r\n\r\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\r\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\r\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\r\n  function dasherize(str) {\r\n    return str.replace(/::/g, '/')\r\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n           .replace(/_/g, '-')\r\n           .toLowerCase()\r\n  }\r\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\r\n\r\n  function classRE(name) {\r\n    return name in classCache ?\r\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\r\n  }\r\n\r\n  function maybeAddPx(name, value) {\r\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n  }\r\n\r\n  function defaultDisplay(nodeName) {\r\n    var element, display\r\n    if (!elementDisplay[nodeName]) {\r\n      element = document.createElement(nodeName)\r\n      document.body.appendChild(element)\r\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n      element.parentNode.removeChild(element)\r\n      display == \"none\" && (display = \"block\")\r\n      elementDisplay[nodeName] = display\r\n    }\r\n    return elementDisplay[nodeName]\r\n  }\r\n\r\n  function children(element) {\r\n    return 'children' in element ?\r\n      slice.call(element.children) :\r\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\r\n  }\r\n\r\n  // `$.zepto.fragment` takes a html string and an optional tag name\r\n  // to generate DOM nodes nodes from the given html string.\r\n  // The generated DOM nodes are returned as an array.\r\n  // This function can be overriden in plugins for example to make\r\n  // it compatible with browsers that don't support the DOM fully.\r\n  zepto.fragment = function(html, name, properties) {\r\n    var dom, nodes, container\r\n\r\n    // A special case optimization for a single tag\r\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\r\n\r\n    if (!dom) {\r\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\r\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\r\n      if (!(name in containers)) name = '*'\r\n\r\n      container = containers[name]\r\n      container.innerHTML = '' + html\r\n      dom = $.each(slice.call(container.childNodes), function(){\r\n        container.removeChild(this)\r\n      })\r\n    }\r\n\r\n    if (isPlainObject(properties)) {\r\n      nodes = $(dom)\r\n      $.each(properties, function(key, value) {\r\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\r\n        else nodes.attr(key, value)\r\n      })\r\n    }\r\n\r\n    return dom\r\n  }\r\n\r\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\r\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\r\n  // to the array. Note that `__proto__` is not supported on Internet\r\n  // Explorer. This method can be overriden in plugins.\r\n  zepto.Z = function(dom, selector) {\r\n    dom = dom || []\r\n    dom.__proto__ = $.fn\r\n    dom.selector = selector || ''\r\n    return dom\r\n  }\r\n\r\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\r\n  // collection. This method can be overriden in plugins.\r\n  zepto.isZ = function(object) {\r\n    return object instanceof zepto.Z\r\n  }\r\n\r\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\r\n  // takes a CSS selector and an optional context (and handles various\r\n  // special cases).\r\n  // This method can be overriden in plugins.\r\n  zepto.init = function(selector, context) {\r\n    // If nothing given, return an empty Zepto collection\r\n    if (!selector) return zepto.Z()\r\n    // If a function is given, call it when the DOM is ready\r\n    else if (isFunction(selector)) return $(document).ready(selector)\r\n    // If a Zepto collection is given, juts return it\r\n    else if (zepto.isZ(selector)) return selector\r\n    else {\r\n      var dom\r\n      // normalize array if an array of nodes is given\r\n      if (isArray(selector)) dom = compact(selector)\r\n      // Wrap DOM nodes.\r\n      else if (isObject(selector))\r\n        dom = [selector], selector = null\r\n      // If it's a html fragment, create nodes from it\r\n      else if (fragmentRE.test(selector))\r\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\r\n      // If there's a context, create a collection on that context first, and select\r\n      // nodes from there\r\n      else if (context !== undefined) return $(context).find(selector)\r\n      // And last but no least, if it's a CSS selector, use it to select nodes.\r\n      else dom = zepto.qsa(document, selector)\r\n      // create a new Zepto collection from the nodes found\r\n      return zepto.Z(dom, selector)\r\n    }\r\n  }\r\n\r\n  // `$` will be the base `Zepto` object. When calling this\r\n  // function just call `$.zepto.init, which makes the implementation\r\n  // details of selecting nodes and creating Zepto collections\r\n  // patchable in plugins.\r\n  $ = function(selector, context){\r\n    return zepto.init(selector, context)\r\n  }\r\n\r\n  function extend(target, source, deep) {\r\n    for (key in source)\r\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\r\n          target[key] = {}\r\n        if (isArray(source[key]) && !isArray(target[key]))\r\n          target[key] = []\r\n        extend(target[key], source[key], deep)\r\n      }\r\n      else if (source[key] !== undefined) target[key] = source[key]\r\n  }\r\n\r\n  // Copy all but undefined properties from one or more\r\n  // objects to the `target` object.\r\n  $.extend = function(target){\r\n    var deep, args = slice.call(arguments, 1)\r\n    if (typeof target == 'boolean') {\r\n      deep = target\r\n      target = args.shift()\r\n    }\r\n    args.forEach(function(arg){ extend(target, arg, deep) })\r\n    return target\r\n  }\r\n\r\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\r\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\r\n  // This method can be overriden in plugins.\r\n  zepto.qsa = function(element, selector){\r\n    var found\r\n    return (isDocument(element) && idSelectorRE.test(selector)) ?\r\n      ( (found = element.getElementById(RegExp.$1)) ? [found] : [] ) :\r\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\r\n      slice.call(\r\n        classSelectorRE.test(selector) ? element.getElementsByClassName(RegExp.$1) :\r\n        tagSelectorRE.test(selector) ? element.getElementsByTagName(selector) :\r\n        element.querySelectorAll(selector)\r\n      )\r\n  }\r\n\r\n  function filtered(nodes, selector) {\r\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\r\n  }\r\n\r\n  $.contains = function(parent, node) {\r\n    return parent !== node && parent.contains(node)\r\n  }\r\n\r\n  function funcArg(context, arg, idx, payload) {\r\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\r\n  }\r\n\r\n  function setAttribute(node, name, value) {\r\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\r\n  }\r\n\r\n  // access className property while respecting SVGAnimatedString\r\n  function className(node, value){\r\n    var klass = node.className,\r\n        svg   = klass && klass.baseVal !== undefined\r\n\r\n    if (value === undefined) return svg ? klass.baseVal : klass\r\n    svg ? (klass.baseVal = value) : (node.className = value)\r\n  }\r\n\r\n  // \"true\"  => true\r\n  // \"false\" => false\r\n  // \"null\"  => null\r\n  // \"42\"    => 42\r\n  // \"42.5\"  => 42.5\r\n  // JSON    => parse if valid\r\n  // String  => self\r\n  function deserializeValue(value) {\r\n    var num\r\n    try {\r\n      return value ?\r\n        value == \"true\" ||\r\n        ( value == \"false\" ? false :\r\n          value == \"null\" ? null :\r\n          !isNaN(num = Number(value)) ? num :\r\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\r\n          value )\r\n        : value\r\n    } catch(e) {\r\n      return value\r\n    }\r\n  }\r\n\r\n  $.type = type\r\n  $.isFunction = isFunction\r\n  $.isWindow = isWindow\r\n  $.isArray = isArray\r\n  $.isPlainObject = isPlainObject\r\n\r\n  $.isEmptyObject = function(obj) {\r\n    var name\r\n    for (name in obj) return false\r\n    return true\r\n  }\r\n\r\n  $.inArray = function(elem, array, i){\r\n    return emptyArray.indexOf.call(array, elem, i)\r\n  }\r\n\r\n  $.camelCase = camelize\r\n  $.trim = function(str) {\r\n    return str == null ? \"\" : String.prototype.trim.call(str)\r\n  }\r\n\r\n  // plugin compatibility\r\n  $.uuid = 0\r\n  $.support = { }\r\n  $.expr = { }\r\n\r\n  $.map = function(elements, callback){\r\n    var value, values = [], i, key\r\n    if (likeArray(elements))\r\n      for (i = 0; i < elements.length; i++) {\r\n        value = callback(elements[i], i)\r\n        if (value != null) values.push(value)\r\n      }\r\n    else\r\n      for (key in elements) {\r\n        value = callback(elements[key], key)\r\n        if (value != null) values.push(value)\r\n      }\r\n    return flatten(values)\r\n  }\r\n\r\n  $.each = function(elements, callback){\r\n    var i, key\r\n    if (likeArray(elements)) {\r\n      for (i = 0; i < elements.length; i++)\r\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\r\n    } else {\r\n      for (key in elements)\r\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\r\n    }\r\n\r\n    return elements\r\n  }\r\n\r\n  $.grep = function(elements, callback){\r\n    return filter.call(elements, callback)\r\n  }\r\n\r\n  if (window.JSON) $.parseJSON = JSON.parse\r\n\r\n  // Populate the class2type map\r\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\r\n  })\r\n\r\n  // Define methods that will be available on all\r\n  // Zepto collections\r\n  $.fn = {\r\n    // Because a collection acts like an array\r\n    // copy over these useful array functions.\r\n    forEach: emptyArray.forEach,\r\n    reduce: emptyArray.reduce,\r\n    push: emptyArray.push,\r\n    sort: emptyArray.sort,\r\n    indexOf: emptyArray.indexOf,\r\n    concat: emptyArray.concat,\r\n\r\n    // `map` and `slice` in the jQuery API work differently\r\n    // from their array counterparts\r\n    map: function(fn){\r\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\r\n    },\r\n    slice: function(){\r\n      return $(slice.apply(this, arguments))\r\n    },\r\n\r\n    ready: function(callback){\r\n      if (readyRE.test(document.readyState)) callback($)\r\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\r\n      return this\r\n    },\r\n    get: function(idx){\r\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n    },\r\n    toArray: function(){ return this.get() },\r\n    size: function(){\r\n      return this.length\r\n    },\r\n    remove: function(){\r\n      return this.each(function(){\r\n        if (this.parentNode != null)\r\n          this.parentNode.removeChild(this)\r\n      })\r\n    },\r\n    each: function(callback){\r\n      emptyArray.every.call(this, function(el, idx){\r\n        return callback.call(el, idx, el) !== false\r\n      })\r\n      return this\r\n    },\r\n    filter: function(selector){\r\n      if (isFunction(selector)) return this.not(this.not(selector))\r\n      return $(filter.call(this, function(element){\r\n        return zepto.matches(element, selector)\r\n      }))\r\n    },\r\n    add: function(selector,context){\r\n      return $(uniq(this.concat($(selector,context))))\r\n    },\r\n    is: function(selector){\r\n      return this.length > 0 && zepto.matches(this[0], selector)\r\n    },\r\n    not: function(selector){\r\n      var nodes=[]\r\n      if (isFunction(selector) && selector.call !== undefined)\r\n        this.each(function(idx){\r\n          if (!selector.call(this,idx)) nodes.push(this)\r\n        })\r\n      else {\r\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n        this.forEach(function(el){\r\n          if (excludes.indexOf(el) < 0) nodes.push(el)\r\n        })\r\n      }\r\n      return $(nodes)\r\n    },\r\n    has: function(selector){\r\n      return this.filter(function(){\r\n        return isObject(selector) ?\r\n          $.contains(this, selector) :\r\n          $(this).find(selector).size()\r\n      })\r\n    },\r\n    eq: function(idx){\r\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\r\n    },\r\n    first: function(){\r\n      var el = this[0]\r\n      return el && !isObject(el) ? el : $(el)\r\n    },\r\n    last: function(){\r\n      var el = this[this.length - 1]\r\n      return el && !isObject(el) ? el : $(el)\r\n    },\r\n    find: function(selector){\r\n      var result, $this = this\r\n      if (typeof selector == 'object')\r\n        result = $(selector).filter(function(){\r\n          var node = this\r\n          return emptyArray.some.call($this, function(parent){\r\n            return $.contains(parent, node)\r\n          })\r\n        })\r\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\r\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\r\n      return result\r\n    },\r\n    closest: function(selector, context){\r\n      var node = this[0], collection = false\r\n      if (typeof selector == 'object') collection = $(selector)\r\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\r\n        node = node !== context && !isDocument(node) && node.parentNode\r\n      return $(node)\r\n    },\r\n    parents: function(selector){\r\n      var ancestors = [], nodes = this\r\n      while (nodes.length > 0)\r\n        nodes = $.map(nodes, function(node){\r\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\r\n            ancestors.push(node)\r\n            return node\r\n          }\r\n        })\r\n      return filtered(ancestors, selector)\r\n    },\r\n    parent: function(selector){\r\n      return filtered(uniq(this.pluck('parentNode')), selector)\r\n    },\r\n    children: function(selector){\r\n      return filtered(this.map(function(){ return children(this) }), selector)\r\n    },\r\n    contents: function() {\r\n      return this.map(function() { return slice.call(this.childNodes) })\r\n    },\r\n    siblings: function(selector){\r\n      return filtered(this.map(function(i, el){\r\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\r\n      }), selector)\r\n    },\r\n    empty: function(){\r\n      return this.each(function(){ this.innerHTML = '' })\r\n    },\r\n    // `pluck` is borrowed from Prototype.js\r\n    pluck: function(property){\r\n      return $.map(this, function(el){ return el[property] })\r\n    },\r\n    show: function(){\r\n      return this.each(function(){\r\n        this.style.display == \"none\" && (this.style.display = '')\r\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\r\n          this.style.display = defaultDisplay(this.nodeName)\r\n      })\r\n    },\r\n    replaceWith: function(newContent){\r\n      return this.before(newContent).remove()\r\n    },\r\n    wrap: function(structure){\r\n      var func = isFunction(structure)\r\n      if (this[0] && !func)\r\n        var dom   = $(structure).get(0),\r\n            clone = dom.parentNode || this.length > 1\r\n\r\n      return this.each(function(index){\r\n        $(this).wrapAll(\r\n          func ? structure.call(this, index) :\r\n            clone ? dom.cloneNode(true) : dom\r\n        )\r\n      })\r\n    },\r\n    wrapAll: function(structure){\r\n      if (this[0]) {\r\n        $(this[0]).before(structure = $(structure))\r\n        var children\r\n        // drill down to the inmost element\r\n        while ((children = structure.children()).length) structure = children.first()\r\n        $(structure).append(this)\r\n      }\r\n      return this\r\n    },\r\n    wrapInner: function(structure){\r\n      var func = isFunction(structure)\r\n      return this.each(function(index){\r\n        var self = $(this), contents = self.contents(),\r\n            dom  = func ? structure.call(this, index) : structure\r\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n      })\r\n    },\r\n    unwrap: function(){\r\n      this.parent().each(function(){\r\n        $(this).replaceWith($(this).children())\r\n      })\r\n      return this\r\n    },\r\n    clone: function(){\r\n      return this.map(function(){ return this.cloneNode(true) })\r\n    },\r\n    hide: function(){\r\n      return this.css(\"display\", \"none\")\r\n    },\r\n    toggle: function(setting){\r\n      return this.each(function(){\r\n        var el = $(this)\r\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n      })\r\n    },\r\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\r\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\r\n    html: function(html){\r\n      return arguments.length === 0 ?\r\n        (this.length > 0 ? this[0].innerHTML : null) :\r\n        this.each(function(idx){\r\n          var originHtml = this.innerHTML\r\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\r\n        })\r\n    },\r\n    text: function(text){\r\n      return arguments.length === 0 ?\r\n        (this.length > 0 ? this[0].textContent : null) :\r\n        this.each(function(){ this.textContent = (text === undefined) ? '' : ''+text })\r\n    },\r\n    attr: function(name, value){\r\n      var result\r\n      return (typeof name == 'string' && value === undefined) ?\r\n        (this.length == 0 || this[0].nodeType !== 1 ? undefined :\r\n          (name == 'value' && this[0].nodeName == 'INPUT') ? this.val() :\r\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\r\n        ) :\r\n        this.each(function(idx){\r\n          if (this.nodeType !== 1) return\r\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\r\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\r\n        })\r\n    },\r\n    removeAttr: function(name){\r\n      return this.each(function(){ this.nodeType === 1 && setAttribute(this, name) })\r\n    },\r\n    prop: function(name, value){\r\n      return (value === undefined) ?\r\n        (this[0] && this[0][name]) :\r\n        this.each(function(idx){\r\n          this[name] = funcArg(this, value, idx, this[name])\r\n        })\r\n    },\r\n    data: function(name, value){\r\n      var data = this.attr('data-' + dasherize(name), value)\r\n      return data !== null ? deserializeValue(data) : undefined\r\n    },\r\n    val: function(value){\r\n      return arguments.length === 0 ?\r\n        (this[0] && (this[0].multiple ?\r\n           $(this[0]).find('option').filter(function(o){ return this.selected }).pluck('value') :\r\n           this[0].value)\r\n        ) :\r\n        this.each(function(idx){\r\n          this.value = funcArg(this, value, idx, this.value)\r\n        })\r\n    },\r\n    offset: function(coordinates){\r\n      if (coordinates) return this.each(function(index){\r\n        var $this = $(this),\r\n            coords = funcArg(this, coordinates, index, $this.offset()),\r\n            parentOffset = $this.offsetParent().offset(),\r\n            props = {\r\n              top:  coords.top  - parentOffset.top,\r\n              left: coords.left - parentOffset.left\r\n            }\r\n\r\n        if ($this.css('position') == 'static') props['position'] = 'relative'\r\n        $this.css(props)\r\n      })\r\n      if (this.length==0) return null\r\n      var obj = this[0].getBoundingClientRect()\r\n      return {\r\n        left: obj.left + window.pageXOffset,\r\n        top: obj.top + window.pageYOffset,\r\n        width: Math.round(obj.width),\r\n        height: Math.round(obj.height)\r\n      }\r\n    },\r\n    css: function(property, value){\r\n      if (arguments.length < 2) {\r\n        var element = this[0], computedStyle = getComputedStyle(element, '')\r\n        if(!element) return\r\n        if (typeof property == 'string')\r\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\r\n        else if (isArray(property)) {\r\n          var props = {}\r\n          $.each(isArray(property) ? property: [property], function(_, prop){\r\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\r\n          })\r\n          return props\r\n        }\r\n      }\r\n\r\n      var css = ''\r\n      if (type(property) == 'string') {\r\n        if (!value && value !== 0)\r\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\r\n        else\r\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n      } else {\r\n        for (key in property)\r\n          if (!property[key] && property[key] !== 0)\r\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\r\n          else\r\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n      }\r\n\r\n      return this.each(function(){ this.style.cssText += ';' + css })\r\n    },\r\n    index: function(element){\r\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\r\n    },\r\n    hasClass: function(name){\r\n      return emptyArray.some.call(this, function(el){\r\n        return this.test(className(el))\r\n      }, classRE(name))\r\n    },\r\n    addClass: function(name){\r\n      return this.each(function(idx){\r\n        classList = []\r\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\r\n        newName.split(/\\s+/g).forEach(function(klass){\r\n          if (!$(this).hasClass(klass)) classList.push(klass)\r\n        }, this)\r\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\r\n      })\r\n    },\r\n    removeClass: function(name){\r\n      return this.each(function(idx){\r\n        if (name === undefined) return className(this, '')\r\n        classList = className(this)\r\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\r\n          classList = classList.replace(classRE(klass), \" \")\r\n        })\r\n        className(this, classList.trim())\r\n      })\r\n    },\r\n    toggleClass: function(name, when){\r\n      return this.each(function(idx){\r\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\r\n        names.split(/\\s+/g).forEach(function(klass){\r\n          (when === undefined ? !$this.hasClass(klass) : when) ?\r\n            $this.addClass(klass) : $this.removeClass(klass)\r\n        })\r\n      })\r\n    },\r\n    scrollTop: function(value){\r\n      if (!this.length) return\r\n      var hasScrollTop = 'scrollTop' in this[0]\r\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\r\n      return this.each(hasScrollTop ?\r\n        function(){ this.scrollTop = value } :\r\n        function(){ this.scrollTo(this.scrollX, value) })\r\n    },\r\n    position: function() {\r\n      if (!this.length) return\r\n\r\n      var elem = this[0],\r\n        // Get *real* offsetParent\r\n        offsetParent = this.offsetParent(),\r\n        // Get correct offsets\r\n        offset       = this.offset(),\r\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\r\n\r\n      // Subtract element margins\r\n      // note: when an element has margin: auto the offsetLeft and marginLeft\r\n      // are the same in Safari causing offset.left to incorrectly be 0\r\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\r\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\r\n\r\n      // Add offsetParent borders\r\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\r\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\r\n\r\n      // Subtract the two offsets\r\n      return {\r\n        top:  offset.top  - parentOffset.top,\r\n        left: offset.left - parentOffset.left\r\n      }\r\n    },\r\n    offsetParent: function() {\r\n      return this.map(function(){\r\n        var parent = this.offsetParent || document.body\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\r\n          parent = parent.offsetParent\r\n        return parent\r\n      })\r\n    }\r\n  }\r\n\r\n  // for now\r\n  $.fn.detach = $.fn.remove\r\n\r\n  // Generate the `width` and `height` functions\r\n  ;['width', 'height'].forEach(function(dimension){\r\n    var dimensionProperty =\r\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\r\n\r\n    $.fn[dimension] = function(value){\r\n      var offset, el = this[0]\r\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\r\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\r\n        (offset = this.offset()) && offset[dimension]\r\n      else return this.each(function(idx){\r\n        el = $(this)\r\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\r\n      })\r\n    }\r\n  })\r\n\r\n  function traverseNode(node, fun) {\r\n    fun(node)\r\n    for (var key in node.childNodes) traverseNode(node.childNodes[key], fun)\r\n  }\r\n\r\n  // Generate the `after`, `prepend`, `before`, `append`,\r\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\r\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\r\n    var inside = operatorIndex % 2 //=> prepend, append\r\n\r\n    $.fn[operator] = function(){\r\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\r\n      var argType, nodes = $.map(arguments, function(arg) {\r\n            argType = type(arg)\r\n            return argType == \"object\" || argType == \"array\" || arg == null ?\r\n              arg : zepto.fragment(arg)\r\n          }),\r\n          parent, copyByClone = this.length > 1\r\n      if (nodes.length < 1) return this\r\n\r\n      return this.each(function(_, target){\r\n        parent = inside ? target : target.parentNode\r\n\r\n        // convert all methods to a \"before\" operation\r\n        target = operatorIndex == 0 ? target.nextSibling :\r\n                 operatorIndex == 1 ? target.firstChild :\r\n                 operatorIndex == 2 ? target :\r\n                 null\r\n\r\n        nodes.forEach(function(node){\r\n          if (copyByClone) node = node.cloneNode(true)\r\n          else if (!parent) return $(node).remove()\r\n\r\n          traverseNode(parent.insertBefore(node, target), function(el){\r\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\r\n               (!el.type || el.type === 'text/javascript') && !el.src)\r\n              window['eval'].call(window, el.innerHTML)\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    // after    => insertAfter\r\n    // prepend  => prependTo\r\n    // before   => insertBefore\r\n    // append   => appendTo\r\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\r\n      $(html)[operator](this)\r\n      return this\r\n    }\r\n  })\r\n\r\n  zepto.Z.prototype = $.fn\r\n\r\n  // Export internal API functions in the `$.zepto` namespace\r\n  zepto.uniq = uniq\r\n  zepto.deserializeValue = deserializeValue\r\n  $.zepto = zepto\r\n\r\n  return $\r\n})()\r\n\r\nwindow.Zepto = Zepto\r\nwindow.$ === undefined && (window.$ = Zepto)\r\n\r\n;(function($){\r\n  function detect(ua){\r\n    var os = this.os = {}, browser = this.browser = {},\r\n      webkit = ua.match(/WebKit\\/([\\d.]+)/),\r\n      android = ua.match(/(Android);?\\s+([\\d.]+)?/),\r\n      ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/),\r\n      ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/),\r\n      iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/),\r\n      webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/),\r\n      touchpad = webos && ua.match(/TouchPad/),\r\n      kindle = ua.match(/Kindle\\/([\\d.]+)/),\r\n      silk = ua.match(/Silk\\/([\\d._]+)/),\r\n      blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/),\r\n      bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/),\r\n      rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/),\r\n      playbook = ua.match(/PlayBook/),\r\n      chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/),\r\n      firefox = ua.match(/Firefox\\/([\\d.]+)/),\r\n      ie = ua.match(/MSIE ([\\d.]+)/),\r\n      safari = webkit && ua.match(/Mobile\\//) && !chrome,\r\n      webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome,\r\n      ie = ua.match(/MSIE\\s([\\d.]+)/)\r\n\r\n    // Todo: clean this up with a better OS/browser seperation:\r\n    // - discern (more) between multiple browsers on android\r\n    // - decide if kindle fire in silk mode is android or not\r\n    // - Firefox on Android doesn't specify the Android version\r\n    // - possibly devide in os, device and browser hashes\r\n\r\n    if (browser.webkit = !!webkit) browser.version = webkit[1]\r\n\r\n    if (android) os.android = true, os.version = android[2]\r\n    if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.')\r\n    if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.')\r\n    if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null\r\n    if (webos) os.webos = true, os.version = webos[2]\r\n    if (touchpad) os.touchpad = true\r\n    if (blackberry) os.blackberry = true, os.version = blackberry[2]\r\n    if (bb10) os.bb10 = true, os.version = bb10[2]\r\n    if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2]\r\n    if (playbook) browser.playbook = true\r\n    if (kindle) os.kindle = true, os.version = kindle[1]\r\n    if (silk) browser.silk = true, browser.version = silk[1]\r\n    if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true\r\n    if (chrome) browser.chrome = true, browser.version = chrome[1]\r\n    if (firefox) browser.firefox = true, browser.version = firefox[1]\r\n    if (ie) browser.ie = true, browser.version = ie[1]\r\n    if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true\r\n    if (webview) browser.webview = true\r\n    if (ie) browser.ie = true, browser.version = ie[1]\r\n\r\n    os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n      (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)))\r\n    os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\r\n      (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n      (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))))\r\n  }\r\n\r\n  detect.call($, navigator.userAgent)\r\n  // make available to unit tests\r\n  $.__detect = detect\r\n\r\n})(Zepto)\r\n\r\n;(function($){\r\n  var $$ = $.zepto.qsa, handlers = {}, _zid = 1, specialEvents={},\r\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\r\n\r\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\r\n\r\n  function zid(element) {\r\n    return element._zid || (element._zid = _zid++)\r\n  }\r\n  function findHandlers(element, event, fn, selector) {\r\n    event = parse(event)\r\n    if (event.ns) var matcher = matcherFor(event.ns)\r\n    return (handlers[zid(element)] || []).filter(function(handler) {\r\n      return handler\r\n        && (!event.e  || handler.e == event.e)\r\n        && (!event.ns || matcher.test(handler.ns))\r\n        && (!fn       || zid(handler.fn) === zid(fn))\r\n        && (!selector || handler.sel == selector)\r\n    })\r\n  }\r\n  function parse(event) {\r\n    var parts = ('' + event).split('.')\r\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\r\n  }\r\n  function matcherFor(ns) {\r\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\r\n  }\r\n\r\n  function eachEvent(events, fn, iterator){\r\n    if ($.type(events) != \"string\") $.each(events, iterator)\r\n    else events.split(/\\s/).forEach(function(type){ iterator(type, fn) })\r\n  }\r\n\r\n  function eventCapture(handler, captureSetting) {\r\n    return handler.del &&\r\n      (handler.e == 'focus' || handler.e == 'blur') ||\r\n      !!captureSetting\r\n  }\r\n\r\n  function realEvent(type) {\r\n    return hover[type] || type\r\n  }\r\n\r\n  function add(element, events, fn, selector, getDelegate, capture){\r\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\r\n    eachEvent(events, fn, function(event, fn){\r\n      var handler   = parse(event)\r\n      handler.fn    = fn\r\n      handler.sel   = selector\r\n      // emulate mouseenter, mouseleave\r\n      if (handler.e in hover) fn = function(e){\r\n        var related = e.relatedTarget\r\n        if (!related || (related !== this && !$.contains(this, related)))\r\n          return handler.fn.apply(this, arguments)\r\n      }\r\n      handler.del   = getDelegate && getDelegate(fn, event)\r\n      var callback  = handler.del || fn\r\n      handler.proxy = function(e){\r\n        var result = callback.apply(element, [e].concat(e.data))\r\n        if (result === false) e.preventDefault(), e.stopPropagation()\r\n        return result\r\n      }\r\n      handler.i = set.length\r\n      set.push(handler)\r\n      if ('addEventListener' in element)\r\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\r\n    })\r\n  }\r\n  function remove(element, events, fn, selector, capture){\r\n    var id = zid(element)\r\n    eachEvent(events || '', fn, function(event, fn){\r\n      findHandlers(element, event, fn, selector).forEach(function(handler){\r\n        delete handlers[id][handler.i]\r\n      if ('removeEventListener' in element)\r\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\r\n      })\r\n    })\r\n  }\r\n\r\n  $.event = { add: add, remove: remove }\r\n\r\n  $.proxy = function(fn, context) {\r\n    if ($.isFunction(fn)) {\r\n      var proxyFn = function(){ return fn.apply(context, arguments) }\r\n      proxyFn._zid = zid(fn)\r\n      return proxyFn\r\n    } else if (typeof context == 'string') {\r\n      return $.proxy(fn[context], fn)\r\n    } else {\r\n      throw new TypeError(\"expected function\")\r\n    }\r\n  }\r\n\r\n  $.fn.bind = function(event, callback){\r\n    return this.each(function(){\r\n      add(this, event, callback)\r\n    })\r\n  }\r\n  $.fn.unbind = function(event, callback){\r\n    return this.each(function(){\r\n      remove(this, event, callback)\r\n    })\r\n  }\r\n  $.fn.one = function(event, callback){\r\n    return this.each(function(i, element){\r\n      add(this, event, callback, null, function(fn, type){\r\n        return function(){\r\n          var result = fn.apply(element, arguments)\r\n          remove(element, type, fn)\r\n          return result\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  var returnTrue = function(){return true},\r\n      returnFalse = function(){return false},\r\n      ignoreProperties = /^([A-Z]|layer[XY]$)/,\r\n      eventMethods = {\r\n        preventDefault: 'isDefaultPrevented',\r\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\r\n        stopPropagation: 'isPropagationStopped'\r\n      }\r\n  function createProxy(event) {\r\n    var key, proxy = { originalEvent: event }\r\n    for (key in event)\r\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\r\n\r\n    $.each(eventMethods, function(name, predicate) {\r\n      proxy[name] = function(){\r\n        this[predicate] = returnTrue\r\n        return event[name].apply(event, arguments)\r\n      }\r\n      proxy[predicate] = returnFalse\r\n    })\r\n    return proxy\r\n  }\r\n\r\n  // emulates the 'defaultPrevented' property for browsers that have none\r\n  function fix(event) {\r\n    if (!('defaultPrevented' in event)) {\r\n      event.defaultPrevented = false\r\n      var prevent = event.preventDefault\r\n      event.preventDefault = function(){\r\n        event.defaultPrevented = true\r\n        prevent.call(event)\r\n      }\r\n    }\r\n  }\r\n\r\n  $.fn.delegate = function(selector, event, callback){\r\n    return this.each(function(i, element){\r\n      add(element, event, callback, selector, function(fn){\r\n        return function(e){\r\n          var evt, match = $(e.target).closest(selector, element).get(0)\r\n          if (match) {\r\n            evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\r\n            return fn.apply(match, [evt].concat([].slice.call(arguments, 1)))\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n  $.fn.undelegate = function(selector, event, callback){\r\n    return this.each(function(){\r\n      remove(this, event, callback, selector)\r\n    })\r\n  }\r\n\r\n  $.fn.live = function(event, callback){\r\n    $(document.body).delegate(this.selector, event, callback)\r\n    return this\r\n  }\r\n  $.fn.die = function(event, callback){\r\n    $(document.body).undelegate(this.selector, event, callback)\r\n    return this\r\n  }\r\n\r\n  $.fn.on = function(event, selector, callback){\r\n    return !selector || $.isFunction(selector) ?\r\n      this.bind(event, selector || callback) : this.delegate(selector, event, callback)\r\n  }\r\n  $.fn.off = function(event, selector, callback){\r\n    return !selector || $.isFunction(selector) ?\r\n      this.unbind(event, selector || callback) : this.undelegate(selector, event, callback)\r\n  }\r\n\r\n  $.fn.trigger = function(event, data){\r\n    if (typeof event == 'string' || $.isPlainObject(event)) event = $.Event(event)\r\n    fix(event)\r\n    event.data = data\r\n    return this.each(function(){\r\n      // items in the collection might not be DOM elements\r\n      if('dispatchEvent' in this) this.dispatchEvent(event)\r\n      else $(this).triggerHandler(event, data)\r\n    })\r\n  }\r\n\r\n  // triggers event handlers on current element just as if an event occurred,\r\n  // doesn't trigger an actual event, doesn't bubble\r\n  $.fn.triggerHandler = function(event, data){\r\n    var e, result\r\n    this.each(function(i, element){\r\n      e = createProxy(typeof event == 'string' ? $.Event(event) : event)\r\n      e.data = data\r\n      e.target = element\r\n      $.each(findHandlers(element, event.type || event), function(i, handler){\r\n        result = handler.proxy(e)\r\n        if (e.isImmediatePropagationStopped()) return false\r\n      })\r\n    })\r\n    return result\r\n  }\r\n\r\n  // shortcut methods for `.bind(event, fn)` for each event type\r\n  ;('focusin focusout load resize scroll unload click dblclick '+\r\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\r\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n    $.fn[event] = function(callback) {\r\n      return callback ?\r\n        this.bind(event, callback) :\r\n        this.trigger(event)\r\n    }\r\n  })\r\n\r\n  ;['focus', 'blur'].forEach(function(name) {\r\n    $.fn[name] = function(callback) {\r\n      if (callback) this.bind(name, callback)\r\n      else this.each(function(){\r\n        try { this[name]() }\r\n        catch(e) {}\r\n      })\r\n      return this\r\n    }\r\n  })\r\n\r\n  $.Event = function(type, props) {\r\n    if (typeof type != 'string') props = type, type = props.type\r\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\r\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\r\n    event.initEvent(type, bubbles, true)\r\n    event.isDefaultPrevented = function(){ return event.defaultPrevented }\r\n    return event\r\n  }\r\n\r\n})(Zepto)\r\n\r\n;(function($){\r\n  var jsonpID = 0,\r\n      document = window.document,\r\n      key,\r\n      name,\r\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n      jsonType = 'application/json',\r\n      htmlType = 'text/html',\r\n      blankRE = /^\\s*$/\r\n\r\n  // trigger a custom event and return false if it was cancelled\r\n  function triggerAndReturn(context, eventName, data) {\r\n    var event = $.Event(eventName)\r\n    $(context).trigger(event, data)\r\n    return !event.defaultPrevented\r\n  }\r\n\r\n  // trigger an Ajax \"global\" event\r\n  function triggerGlobal(settings, context, eventName, data) {\r\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n  }\r\n\r\n  // Number of active Ajax requests\r\n  $.active = 0\r\n\r\n  function ajaxStart(settings) {\r\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n  }\r\n  function ajaxStop(settings) {\r\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\r\n  }\r\n\r\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n  function ajaxBeforeSend(xhr, settings) {\r\n    var context = settings.context\r\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n      return false\r\n\r\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n  }\r\n  function ajaxSuccess(data, xhr, settings) {\r\n    var context = settings.context, status = 'success'\r\n    settings.success.call(context, data, status, xhr)\r\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n    ajaxComplete(status, xhr, settings)\r\n  }\r\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n  function ajaxError(error, type, xhr, settings) {\r\n    var context = settings.context\r\n    settings.error.call(context, xhr, type, error)\r\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n    ajaxComplete(type, xhr, settings)\r\n  }\r\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n  function ajaxComplete(status, xhr, settings) {\r\n    var context = settings.context\r\n    settings.complete.call(context, xhr, status)\r\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n    ajaxStop(settings)\r\n  }\r\n\r\n  // Empty function, used as default callback\r\n  function empty() {}\r\n\r\n  $.ajaxJSONP = function(options){\r\n    if (!('type' in options)) return $.ajax(options)\r\n\r\n    var _callbackName = options.jsonpCallback,\r\n      callbackName = ($.isFunction(_callbackName) ?\r\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n      script = document.createElement('script'),\r\n      cleanup = function() {\r\n        clearTimeout(abortTimeout)\r\n        $(script).remove()\r\n        delete window[callbackName]\r\n      },\r\n      abort = function(type){\r\n        cleanup()\r\n        // In case of manual abort or timeout, keep an empty function as callback\r\n        // so that the SCRIPT tag that eventually loads won't result in an error.\r\n        if (!type || type == 'timeout') window[callbackName] = empty\r\n        ajaxError(null, type || 'abort', xhr, options)\r\n      },\r\n      xhr = { abort: abort }, abortTimeout\r\n\r\n    if (ajaxBeforeSend(xhr, options) === false) {\r\n      abort('abort')\r\n      return false\r\n    }\r\n\r\n    window[callbackName] = function(data){\r\n      cleanup()\r\n      ajaxSuccess(data, xhr, options)\r\n    }\r\n\r\n    script.onerror = function() { abort('error') }\r\n\r\n    script.src = options.url.replace(/=\\?/, '=' + callbackName)\r\n    $('head').append(script)\r\n\r\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\r\n      abort('timeout')\r\n    }, options.timeout)\r\n\r\n    return xhr\r\n  }\r\n\r\n  $.ajaxSettings = {\r\n    // Default type of request\r\n    type: 'GET',\r\n    // Callback that is executed before request\r\n    beforeSend: empty,\r\n    // Callback that is executed if the request succeeds\r\n    success: empty,\r\n    // Callback that is executed the the server drops error\r\n    error: empty,\r\n    // Callback that is executed on request complete (both: error and success)\r\n    complete: empty,\r\n    // The context for the callbacks\r\n    context: null,\r\n    // Whether to trigger \"global\" Ajax events\r\n    global: true,\r\n    // Transport\r\n    xhr: function () {\r\n      return new window.XMLHttpRequest()\r\n    },\r\n    // MIME types mapping\r\n    accepts: {\r\n      script: 'text/javascript, application/javascript',\r\n      json:   jsonType,\r\n      xml:    'application/xml, text/xml',\r\n      html:   htmlType,\r\n      text:   'text/plain'\r\n    },\r\n    // Whether the request is to another domain\r\n    crossDomain: false,\r\n    // Default timeout\r\n    timeout: 0,\r\n    // Whether data should be serialized to string\r\n    processData: true,\r\n    // Whether the browser should be allowed to cache GET responses\r\n    cache: true\r\n  }\r\n\r\n  function mimeToDataType(mime) {\r\n    if (mime) mime = mime.split(';', 2)[0]\r\n    return mime && ( mime == htmlType ? 'html' :\r\n      mime == jsonType ? 'json' :\r\n      scriptTypeRE.test(mime) ? 'script' :\r\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\r\n  }\r\n\r\n  function appendQuery(url, query) {\r\n    if (query == '') return url\r\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n  }\r\n\r\n  // serialize payload and append it to the URL for GET requests\r\n  function serializeData(options) {\r\n    if (options.processData && options.data && $.type(options.data) != \"string\")\r\n      options.data = $.param(options.data, options.traditional)\r\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n      options.url = appendQuery(options.url, options.data)\r\n  }\r\n\r\n  $.ajax = function(options){\r\n    var settings = $.extend({}, options || {})\r\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\r\n\r\n    ajaxStart(settings)\r\n\r\n    if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) &&\r\n      RegExp.$2 != window.location.host\r\n\r\n    if (!settings.url) settings.url = window.location.toString()\r\n    serializeData(settings)\r\n    if (settings.cache === false) settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n    var dataType = settings.dataType, hasPlaceholder = /=\\?/.test(settings.url)\r\n    if (dataType == 'jsonp' || hasPlaceholder) {\r\n      if (!hasPlaceholder)\r\n        settings.url = appendQuery(settings.url,\r\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n      return $.ajaxJSONP(settings)\r\n    }\r\n\r\n    var mime = settings.accepts[dataType],\r\n        baseHeaders = { },\r\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n        xhr = settings.xhr(), abortTimeout\r\n\r\n    if (!settings.crossDomain) baseHeaders['X-Requested-With'] = 'XMLHttpRequest'\r\n    if (mime) {\r\n      baseHeaders['Accept'] = mime\r\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n    }\r\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n      baseHeaders['Content-Type'] = (settings.contentType || 'application/x-www-form-urlencoded')\r\n    settings.headers = $.extend(baseHeaders, settings.headers || {})\r\n\r\n    xhr.onreadystatechange = function(){\r\n      if (xhr.readyState == 4) {\r\n        xhr.onreadystatechange = empty;\r\n        clearTimeout(abortTimeout)\r\n        var result, error = false\r\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n          dataType = dataType || mimeToDataType(xhr.getResponseHeader('content-type'))\r\n          result = xhr.responseText\r\n\r\n          try {\r\n            // http://perfectionkills.com/global-eval-what-are-the-options/\r\n            if (dataType == 'script')    (1,eval)(result)\r\n            else if (dataType == 'xml')  result = xhr.responseXML\r\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\r\n          } catch (e) { error = e }\r\n\r\n          if (error) ajaxError(error, 'parsererror', xhr, settings)\r\n          else ajaxSuccess(result, xhr, settings)\r\n        } else {\r\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings)\r\n        }\r\n      }\r\n    }\r\n\r\n    var async = 'async' in settings ? settings.async : true\r\n    xhr.open(settings.type, settings.url, async)\r\n\r\n    for (name in settings.headers) xhr.setRequestHeader(name, settings.headers[name])\r\n\r\n    if (ajaxBeforeSend(xhr, settings) === false) {\r\n      xhr.abort()\r\n      return false\r\n    }\r\n\r\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\r\n        xhr.onreadystatechange = empty\r\n        xhr.abort()\r\n        ajaxError(null, 'timeout', xhr, settings)\r\n      }, settings.timeout)\r\n\r\n    // avoid sending empty string (#319)\r\n    xhr.send(settings.data ? settings.data : null)\r\n    return xhr\r\n  }\r\n\r\n  // handle optional data/success arguments\r\n  function parseArguments(url, data, success, dataType) {\r\n    var hasData = !$.isFunction(data)\r\n    return {\r\n      url:      url,\r\n      data:     hasData  ? data : undefined,\r\n      success:  !hasData ? data : $.isFunction(success) ? success : undefined,\r\n      dataType: hasData  ? dataType || success : success\r\n    }\r\n  }\r\n\r\n  $.get = function(url, data, success, dataType){\r\n    return $.ajax(parseArguments.apply(null, arguments))\r\n  }\r\n\r\n  $.post = function(url, data, success, dataType){\r\n    var options = parseArguments.apply(null, arguments)\r\n    options.type = 'POST'\r\n    return $.ajax(options)\r\n  }\r\n\r\n  $.getJSON = function(url, data, success){\r\n    var options = parseArguments.apply(null, arguments)\r\n    options.dataType = 'json'\r\n    return $.ajax(options)\r\n  }\r\n\r\n  $.fn.load = function(url, data, success){\r\n    if (!this.length) return this\r\n    var self = this, parts = url.split(/\\s/), selector,\r\n        options = parseArguments(url, data, success),\r\n        callback = options.success\r\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n    options.success = function(response){\r\n      self.html(selector ?\r\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\r\n        : response)\r\n      callback && callback.apply(self, arguments)\r\n    }\r\n    $.ajax(options)\r\n    return this\r\n  }\r\n\r\n  var escape = encodeURIComponent\r\n\r\n  function serialize(params, obj, traditional, scope){\r\n    var type, array = $.isArray(obj)\r\n    $.each(obj, function(key, value) {\r\n      type = $.type(value)\r\n      if (scope) key = traditional ? scope : scope + '[' + (array ? '' : key) + ']'\r\n      // handle data in serializeArray() format\r\n      if (!scope && array) params.add(value.name, value.value)\r\n      // recurse into nested objects\r\n      else if (type == \"array\" || (!traditional && type == \"object\"))\r\n        serialize(params, value, traditional, key)\r\n      else params.add(key, value)\r\n    })\r\n  }\r\n\r\n  $.param = function(obj, traditional){\r\n    var params = []\r\n    params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }\r\n    serialize(params, obj, traditional)\r\n    return params.join('&').replace(/%20/g, '+')\r\n  }\r\n})(Zepto)\r\n\r\n;(function ($) {\r\n  $.fn.serializeArray = function() {\r\n    var result = [], el\r\n    $([].slice.call(this.get(0).elements)).each(function(){\r\n      el = $(this)\r\n      var type = el.attr('type')\r\n      if (this.nodeName.toLowerCase() != 'fieldset' &&\r\n        !this.disabled && type != 'submit' && type != 'reset' && type != 'button' &&\r\n        ((type != 'radio' && type != 'checkbox') || this.checked))\r\n        result.push({\r\n          name: el.attr('name'),\r\n          value: el.val()\r\n        })\r\n    })\r\n    return result\r\n  }\r\n\r\n  $.fn.serialize = function(){\r\n    var result = []\r\n    this.serializeArray().forEach(function(elm){\r\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n    })\r\n    return result.join('&')\r\n  }\r\n\r\n  $.fn.submit = function(callback) {\r\n    if (callback) this.bind('submit', callback)\r\n    else if (this.length) {\r\n      var event = $.Event('submit')\r\n      this.eq(0).trigger(event)\r\n      if (!event.defaultPrevented) this.get(0).submit()\r\n    }\r\n    return this\r\n  }\r\n\r\n})(Zepto)\r\n\r\n;(function($, undefined){\r\n  var prefix = '', eventPrefix, endEventName, endAnimationName,\r\n    vendors = { Webkit: 'webkit', Moz: '', O: 'o', ms: 'MS' },\r\n    document = window.document, testEl = document.createElement('div'),\r\n    supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n    transform,\r\n    transitionProperty, transitionDuration, transitionTiming, transitionDelay,\r\n    animationName, animationDuration, animationTiming, animationDelay,\r\n    cssReset = {}\r\n\r\n  function dasherize(str) { return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase() }\r\n  function normalizeEvent(name) { return eventPrefix ? eventPrefix + name : name.toLowerCase() }\r\n\r\n  $.each(vendors, function(vendor, event){\r\n    if (testEl.style[vendor + 'TransitionProperty'] !== undefined) {\r\n      prefix = '-' + vendor.toLowerCase() + '-'\r\n      eventPrefix = event\r\n      return false\r\n    }\r\n  })\r\n\r\n  transform = prefix + 'transform'\r\n  cssReset[transitionProperty = prefix + 'transition-property'] =\r\n  cssReset[transitionDuration = prefix + 'transition-duration'] =\r\n  cssReset[transitionDelay    = prefix + 'transition-delay'] =\r\n  cssReset[transitionTiming   = prefix + 'transition-timing-function'] =\r\n  cssReset[animationName      = prefix + 'animation-name'] =\r\n  cssReset[animationDuration  = prefix + 'animation-duration'] =\r\n  cssReset[animationDelay     = prefix + 'animation-delay'] =\r\n  cssReset[animationTiming    = prefix + 'animation-timing-function'] = ''\r\n\r\n  $.fx = {\r\n    off: (eventPrefix === undefined && testEl.style.transitionProperty === undefined),\r\n    speeds: { _default: 400, fast: 200, slow: 600 },\r\n    cssPrefix: prefix,\r\n    transitionEnd: normalizeEvent('TransitionEnd'),\r\n    animationEnd: normalizeEvent('AnimationEnd')\r\n  }\r\n\r\n  $.fn.animate = function(properties, duration, ease, callback, delay){\r\n    if ($.isPlainObject(duration))\r\n      ease = duration.easing, callback = duration.complete, delay = duration.delay, duration = duration.duration\r\n    if (duration) duration = (typeof duration == 'number' ? duration :\r\n                    ($.fx.speeds[duration] || $.fx.speeds._default)) / 1000\r\n    if (delay) delay = parseFloat(delay) / 1000\r\n    return this.anim(properties, duration, ease, callback, delay)\r\n  }\r\n\r\n  $.fn.anim = function(properties, duration, ease, callback, delay){\r\n    var key, cssValues = {}, cssProperties, transforms = '',\r\n        that = this, wrappedCallback, endEvent = $.fx.transitionEnd\r\n\r\n    if (duration === undefined) duration = 0.4\r\n    if (delay === undefined) delay = 0\r\n    if ($.fx.off) duration = 0\r\n\r\n    if (typeof properties == 'string') {\r\n      // keyframe animation\r\n      cssValues[animationName] = properties\r\n      cssValues[animationDuration] = duration + 's'\r\n      cssValues[animationDelay] = delay + 's'\r\n      cssValues[animationTiming] = (ease || 'linear')\r\n      endEvent = $.fx.animationEnd\r\n    } else {\r\n      cssProperties = []\r\n      // CSS transitions\r\n      for (key in properties)\r\n        if (supportedTransforms.test(key)) transforms += key + '(' + properties[key] + ') '\r\n        else cssValues[key] = properties[key], cssProperties.push(dasherize(key))\r\n\r\n      if (transforms) cssValues[transform] = transforms, cssProperties.push(transform)\r\n      if (duration > 0 && typeof properties === 'object') {\r\n        cssValues[transitionProperty] = cssProperties.join(', ')\r\n        cssValues[transitionDuration] = duration + 's'\r\n        cssValues[transitionDelay] = delay + 's'\r\n        cssValues[transitionTiming] = (ease || 'linear')\r\n      }\r\n    }\r\n\r\n    wrappedCallback = function(event){\r\n      if (typeof event !== 'undefined') {\r\n        if (event.target !== event.currentTarget) return // makes sure the event didn't bubble from \"below\"\r\n        $(event.target).unbind(endEvent, wrappedCallback)\r\n      }\r\n      $(this).css(cssReset)\r\n      callback && callback.call(this)\r\n    }\r\n    if (duration > 0) this.bind(endEvent, wrappedCallback)\r\n\r\n    // trigger page reflow so new elements can animate\r\n    this.size() && this.get(0).clientLeft\r\n\r\n    this.css(cssValues)\r\n\r\n    if (duration <= 0) setTimeout(function() {\r\n      that.each(function(){ wrappedCallback.call(this) })\r\n    }, 0)\r\n\r\n    return this\r\n  }\r\n\r\n  testEl = null\r\n})(Zepto)\r\n\r\n;(function($){\r\n  var touch = {},\r\n    touchTimeout, tapTimeout, swipeTimeout, longTapTimeout,\r\n    longTapDelay = 750,\r\n    gesture\r\n\r\n  function swipeDirection(x1, x2, y1, y2) {\r\n    return Math.abs(x1 - x2) >=\r\n      Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')\r\n  }\r\n\r\n  function longTap() {\r\n    longTapTimeout = null\r\n    if (touch.last) {\r\n      touch.el.trigger('longTap')\r\n      touch = {}\r\n    }\r\n  }\r\n\r\n  function cancelLongTap() {\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    longTapTimeout = null\r\n  }\r\n\r\n  function cancelAll() {\r\n    if (touchTimeout) clearTimeout(touchTimeout)\r\n    if (tapTimeout) clearTimeout(tapTimeout)\r\n    if (swipeTimeout) clearTimeout(swipeTimeout)\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null\r\n    touch = {}\r\n  }\r\n\r\n  function isPrimaryTouch(event){\r\n    return event.pointerType == event.MSPOINTER_TYPE_TOUCH && event.isPrimary\r\n  }\r\n\r\n  $(document).ready(function(){\r\n    var now, delta, deltaX = 0, deltaY = 0, firstTouch\r\n\r\n    if ('MSGesture' in window) {\r\n      gesture = new MSGesture()\r\n      gesture.target = document.body\r\n    }\r\n\r\n    $(document)\r\n      .bind('MSGestureEnd', function(e){\r\n        var swipeDirectionFromVelocity =\r\n          e.velocityX > 1 ? 'Right' : e.velocityX < -1 ? 'Left' : e.velocityY > 1 ? 'Down' : e.velocityY < -1 ? 'Up' : null;\r\n        if (swipeDirectionFromVelocity) {\r\n          touch.el.trigger('swipe')\r\n          touch.el.trigger('swipe'+ swipeDirectionFromVelocity)\r\n        }\r\n      })\r\n      .on('touchstart MSPointerDown', function(e){\r\n        if(e.type == 'MSPointerDown' && !isPrimaryTouch(e)) return;\r\n        firstTouch = e.type == 'MSPointerDown' ? e : e.touches[0]\r\n        now = Date.now()\r\n        delta = now - (touch.last || now)\r\n        touch.el = $('tagName' in firstTouch.target ?\r\n          firstTouch.target : firstTouch.target.parentNode)\r\n        touchTimeout && clearTimeout(touchTimeout)\r\n        touch.x1 = firstTouch.pageX\r\n        touch.y1 = firstTouch.pageY\r\n        if (delta > 0 && delta <= 250) touch.isDoubleTap = true\r\n        touch.last = now\r\n        longTapTimeout = setTimeout(longTap, longTapDelay)\r\n        // adds the current touch contact for IE gesture recognition\r\n        if (gesture && e.type == 'MSPointerDown') gesture.addPointer(e.pointerId);\r\n      })\r\n      .on('touchmove MSPointerMove', function(e){\r\n        if(e.type == 'MSPointerMove' && !isPrimaryTouch(e)) return;\r\n        firstTouch = e.type == 'MSPointerMove' ? e : e.touches[0]\r\n        cancelLongTap()\r\n        touch.x2 = firstTouch.pageX\r\n        touch.y2 = firstTouch.pageY\r\n\r\n        deltaX += Math.abs(touch.x1 - touch.x2)\r\n        deltaY += Math.abs(touch.y1 - touch.y2)\r\n      })\r\n      .on('touchend MSPointerUp', function(e){\r\n        if(e.type == 'MSPointerUp' && !isPrimaryTouch(e)) return;\r\n        cancelLongTap()\r\n\r\n        // swipe\r\n        if ((touch.x2 && Math.abs(touch.x1 - touch.x2) > 30) ||\r\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > 30))\r\n\r\n          swipeTimeout = setTimeout(function() {\r\n            touch.el.trigger('swipe')\r\n            touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)))\r\n            touch = {}\r\n          }, 0)\r\n\r\n        // normal tap\r\n        else if ('last' in touch)\r\n          // don't fire tap when delta position changed by more than 30 pixels,\r\n          // for instance when moving to a point and back to origin\r\n          if (deltaX < 30 && deltaY < 30) {\r\n            // delay by one tick so we can cancel the 'tap' event if 'scroll' fires\r\n            // ('tap' fires before 'scroll')\r\n            tapTimeout = setTimeout(function() {\r\n\r\n              // trigger universal 'tap' with the option to cancelTouch()\r\n              // (cancelTouch cancels processing of single vs double taps for faster 'tap' response)\r\n              var event = $.Event('tap')\r\n              event.cancelTouch = cancelAll\r\n              touch.el.trigger(event)\r\n\r\n              // trigger double tap immediately\r\n              if (touch.isDoubleTap) {\r\n                touch.el.trigger('doubleTap')\r\n                touch = {}\r\n              }\r\n\r\n              // trigger single tap after 250ms of inactivity\r\n              else {\r\n                touchTimeout = setTimeout(function(){\r\n                  touchTimeout = null\r\n                  touch.el.trigger('singleTap')\r\n                  touch = {}\r\n                }, 250)\r\n              }\r\n            }, 0)\r\n          } else {\r\n            touch = {}\r\n          }\r\n          deltaX = deltaY = 0\r\n\r\n      })\r\n      // when the browser window loses focus,\r\n      // for example when a modal dialog is shown,\r\n      // cancel all ongoing events\r\n      .on('touchcancel MSPointerCancel', cancelAll)\r\n\r\n    // scrolling the window indicates intention of the user\r\n    // to scroll, not tap or swipe, so cancel all ongoing events\r\n    $(window).on('scroll', cancelAll)\r\n  })\r\n\r\n  ;['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown',\r\n    'doubleTap', 'tap', 'singleTap', 'longTap'].forEach(function(eventName){\r\n    $.fn[eventName] = function(callback){ return this.on(eventName, callback) }\r\n  })\r\n})(Zepto)\r\n","(function() {\r\n\r\n\tvar d = {\r\n\t\ta: 1,\r\n\t\tb: 2,\r\n\t\tc: 3\r\n\t}\r\n\r\n\t$('.btn').click(function() {\r\n\t\talert('click me?');\r\n\t})\r\n\r\n})();"],"sourceRoot":"/source/"}